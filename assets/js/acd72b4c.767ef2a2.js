"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[9353],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||i;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1738:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),s=["components"],o={},l="final",c={unversionedId:"Year1/Programming Paradigms/Java/22.03.11 - Patterns and Inner classes",id:"Year1/Programming Paradigms/Java/22.03.11 - Patterns and Inner classes",title:"final",description:"- Variables can be final: cant change the value once you have initialised them.",source:"@site/docs/Year1/1009 - Programming Paradigms/Java/22.03.11 - Patterns and Inner classes.md",sourceDirName:"Year1/1009 - Programming Paradigms/Java",slug:"/Year1/Programming Paradigms/Java/22.03.11 - Patterns and Inner classes",permalink:"/Year1/Programming Paradigms/Java/22.03.11 - Patterns and Inner classes",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interfaces, Buttons and Event Handlers",permalink:"/Year1/Programming Paradigms/Java/22.03.04 - Interfaces"},next:{title:"22.03.17 - Parametric Polymorphism and Boxing",permalink:"/Year1/Programming Paradigms/Java/22.03.17 - Parametric Polymorphism and Boxing"}},u={},m=[{value:"User interface Classes",id:"user-interface-classes",level:2},{value:"Containers have components",id:"containers-have-components",level:2},{value:"Layout managers",id:"layout-managers",level:2},{value:"Strategy Pattern",id:"strategy-pattern",level:2},{value:"Observer Pattern",id:"observer-pattern",level:2},{value:"Java listeners",id:"java-listeners",level:3}],p={toc:m};function d(e){var t=e.components,o=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"final"},"final"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Variables can be final: cant change the value once you have initialised them."),(0,i.kt)("li",{parentName:"ul"},"Methods can also be final, so you cant change their implementation in a subclass."),(0,i.kt)("li",{parentName:"ul"},"Classes can be final: cant subclass them")),(0,i.kt)("h1",{id:"reviewing-out-classes-so-far"},"Reviewing out classes so far"),(0,i.kt)("h2",{id:"user-interface-classes"},"User interface Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Every class is derived from object"),(0,i.kt)("li",{parentName:"ul"},"As we work down the class hierarchy, get more specialised")),(0,i.kt)("h2",{id:"containers-have-components"},"Containers have components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A container can contain components"),(0,i.kt)("li",{parentName:"ul"},"A container IS-A component and can containers containers")),(0,i.kt)("h2",{id:"layout-managers"},"Layout managers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Containers have layout managers associated with them"),(0,i.kt)("li",{parentName:"ul"},"Can set the layout manager to use what layout"),(0,i.kt)("li",{parentName:"ul"},"A FlowLayout IS-A layout manager so a container can use it")),(0,i.kt)("h1",{id:"patterns"},"Patterns"),(0,i.kt)("h2",{id:"strategy-pattern"},"Strategy Pattern"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Screenshot_20220311_121730.png",src:n(6740).Z,width:"838",height:"476"}),"\nDelegates some work to another class"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Get situations where a class has a number of responsibilities and it can implement each in multiple different ways"),(0,i.kt)("li",{parentName:"ul"},"Decide on the set of responsibilities and create an interface for them"),(0,i.kt)("li",{parentName:"ul"},"Can create different sub-classes which implement the responsibilities differently "),(0,i.kt)("li",{parentName:"ul"},"Main object asks the implementer of interface to do the action whenever it is needed, rather than doing it itself")),(0,i.kt)("h2",{id:"observer-pattern"},"Observer Pattern"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"7976dd04e7fed75196b4315c4ea3ce2d.png",src:n(1316).Z,width:"833",height:"343"}),"\nNotifying an object (or multiple objects) of a different class that an even has occurred"),(0,i.kt)("h3",{id:"java-listeners"},"Java listeners"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Can notify an object of something by calling a method on it"),(0,i.kt)("li",{parentName:"ul"},"Caller knows that listener IS-AN ActionListener, so it knows it can call its actionPerformcd() method to tell it when something happens"),(0,i.kt)("li",{parentName:"ul"},"Caller does not know what the listener will do in reaction to being told"),(0,i.kt)("li",{parentName:"ul"},"Listener could also support other interfaces")),(0,i.kt)("h1",{id:"nested-and-inner-classes"},"Nested and Inner Classes"),(0,i.kt)("p",null,"Can defined classes inside classes. Cant make the classes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"static: not associated with object of outer class or not")),(0,i.kt)("h1",{id:"using-inner-classes"},"Using Inner Classes"),(0,i.kt)("p",null,"Classes inside another class\nAdaptors - Exist for many of the interfaces. These are classes which have empty implementations of the methods, so would only need to implement one"))}d.isMDXComponent=!0},1316:function(e,t,n){t.Z=n.p+"assets/images/7976dd04e7fed75196b4315c4ea3ce2d-28735cb8c6aea4e08a5f56246da3935a.png"},6740:function(e,t,n){t.Z=n.p+"assets/images/Screenshot_20220311_121730-93ee9653e4c6dd2c1f24613dbf2c4f0b.png"}}]);