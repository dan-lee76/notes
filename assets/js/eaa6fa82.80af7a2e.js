"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[8111],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=u(r),g=a,d=s["".concat(p,".").concat(g)]||s[g]||c[g]||l;return r?n.createElement(d,o(o({ref:t},m),{},{components:r})):n.createElement(d,o({ref:t},m))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},1717:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const l={},o="0. Introduction & Halting Problem",i={unversionedId:"Year2/2012/00",id:"Year2/2012/00",title:"0. Introduction & Halting Problem",description:"30/01/23",source:"@site/docs/Year2/2012/00.md",sourceDirName:"Year2/2012",slug:"/Year2/2012/00",permalink:"/Year2/2012/00",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year2",previous:{title:"Class Test Revision",permalink:"/Year2/2009/IFR/class_test"},next:{title:"01. Language",permalink:"/Year2/2012/01"}},p={},u=[{value:"Halting Problem",id:"halting-problem",level:2}],m={toc:u};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"0-introduction--halting-problem"},"0. Introduction & Halting Problem"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"30/01/23")),(0,a.kt)("p",null,"Automata - Ways of"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Formative Language"),(0,a.kt)("th",{parentName:"tr",align:null},"Automita"),(0,a.kt)("th",{parentName:"tr",align:null},"Reg Ex / Grammar"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Type 3"),(0,a.kt)("td",{parentName:"tr",align:null},"Regular Languages"),(0,a.kt)("td",{parentName:"tr",align:null},"Finite Automata (Deterministic or Non-Deterministic)"),(0,a.kt)("td",{parentName:"tr",align:null},"Regular Expression")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Type 2"),(0,a.kt)("td",{parentName:"tr",align:null},"Context-free Languages"),(0,a.kt)("td",{parentName:"tr",align:null},"Push down automita"),(0,a.kt)("td",{parentName:"tr",align:null},"Context-free grammar")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Type 1"),(0,a.kt)("td",{parentName:"tr",align:null},"Context Sensitive Languages"),(0,a.kt)("td",{parentName:"tr",align:null},"Turing Machine"),(0,a.kt)("td",{parentName:"tr",align:null},"Grammar")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Type 0"),(0,a.kt)("td",{parentName:"tr",align:null},"Recursively Enumerable Languages"),(0,a.kt)("td",{parentName:"tr",align:null},"Turing Machine"),(0,a.kt)("td",{parentName:"tr",align:null},"Grammar")))),(0,a.kt)("h2",{id:"halting-problem"},"Halting Problem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void weird (char *code){\nif holts(code, code)\n    while(n);\nelse\n    return;\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Cannot prove that any program will stop"),(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Will Spooner")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"It is impossible to write a program that decides if another, arbitrary, program terminates (halts) or not")))}c.isMDXComponent=!0}}]);