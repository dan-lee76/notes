"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[6535],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>f});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var c=r.createContext({}),l=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},s=function(n){var e=l(n.components);return r.createElement(c.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,c=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),m=l(t),f=a,y=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return t?r.createElement(y,p(p({ref:e},s),{},{components:t})):r.createElement(y,p({ref:e},s))}));function f(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,p=new Array(o);p[0]=m;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=n,i.mdxType="string"==typeof n?n:a,p[1]=i;for(var l=2;l<o;l++)p[l]=t[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},71099:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={},p="2.  Propositional logic to lean",i={unversionedId:"Year2/2009/IFR/02",id:"Year2/2009/IFR/02",title:"2.  Propositional logic to lean",description:"10/10/22",source:"@site/docs/Year2/2009/IFR/02.md",sourceDirName:"Year2/2009/IFR",slug:"/Year2/2009/IFR/02",permalink:"/Year2/2009/IFR/02",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year2",previous:{title:"1. Propositional logic in tautology",permalink:"/Year2/2009/IFR/01"},next:{title:"3. Summary of tactics & De Morgan",permalink:"/Year2/2009/IFR/03"}},c={},l=[],s={toc:l};function u(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"2--propositional-logic-to-lean"},"2.  Propositional logic to lean"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"10/10/22")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean"},"/-\n\nLecture 3: Propositional logic to lean\n\n-/\n\nvariables P Q R : Prop\n\nexample : (P \u2192 P \u2192 Q) \u2192 (P \u2192 Q) :=\nbegin\n  assume h p,\n  apply h,\n  exact p,\n  exact p,\nend\n\n-- how to prove an implication?\n-- assume x,\n-- goal was \u22a2 P \u2192 Q\n-- after x : P \u22a2 Q\n-- assume x y,\n-- goal was \u22a2 P \u2192 Q \u2192 R\n-- after x : p,y : Q \u22a2 R\n-- how to use an implication?\n-- given h : P \u2192 Q\n-- apply h, then need to prove p\n-- given h : P \u2192 Q \u2192 R\n-- then have to prove P and Q\n\n-- CONJUNCTION (P \u2227 Q) P and Q\n\nexample : P \u2192 (Q \u2192 (P \u2227 Q)) :=\nbegin\n  assume p q,\n  constructor,\n  exact p,\n  exact q,\nend\n\nexample : P \u2227 Q \u2192 P :=\nbegin\n  assume h,\n  cases h with p q, --splits p and q\n  exact p,\nend\n\n-- to prove P \u2227 Q : use constrictor,\n-- to use h : P \u2227 Q : use cases h with x y,\n\n-- P \u2192 Q \u2192 R\n-- P \u2227 Q -> R\n-- P \u2194 Q\n-- \\iff = if and only if\n\ntheorem curry:\n(P \u2192 Q \u2192 R) \u2194 (P \u2227 Q \u2192 R) :=\nbegin\n  constructor,\n  assume l h,\n  /- Bad Way\n  cases h with p q,\n  exact p,\n  cases h with pq,\n  exact q,\n  -/\n  cases h with p q,\n  apply l,\n  exact p,\n  exact q,\n\n  assume pqr p q,\n  apply pqr,\n  constructor,\n  exact p,\n  exact q,\n\nend \n\n-- Haskell Curry\n-- Int -> Int -> Int\n-- (Int, Int) -> Int\n\n\n-- disjunction\n-- P \u2228 Q, P or Q\n\nexample : P \u2192 P \u2228 Q :=\nbegin\n  assume p,\n  left,\n  exact p,\nend\n\nexample : Q \u2192 P \u2228 Q :=\nbegin\n  assume q,\n  right,\n  exact q,\nend\n\nexample : (P \u2192 R) \u2192 (Q \u2192 R) \u2192 (P \u2228 Q) \u2192 R :=\nbegin\n  assume pr qr pq,\n  cases pq with p q,\n  apply pr,\n  exact p,\n  apply qr, \n  exact q,\nend\n\nexample : true :=\nbegin\n  constructor,\nend\n\nexample : false \u2192 P:=\nbegin\n  assume h,\n  cases h,\nend\n\n-- ex false quod libet\n-- from false everything follows\n-- \xac P = P \u2192 false\n\nexample : \xac (P \u2227 \xac P) :=\nbegin\n  assume h,\n  cases h with p np,\n  apply np,\n  exact p,\nend\n")))}u.isMDXComponent=!0}}]);