"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[7778],{3905:(e,a,t)=>{t.d(a,{Zo:()=>o,kt:()=>N});var n=t(67294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var m=n.createContext({}),p=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},o=function(e){var a=p(e.components);return n.createElement(m.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,m=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),u=p(t),N=s,k=u["".concat(m,".").concat(N)]||u[N]||c[N]||r;return t?n.createElement(k,i(i({ref:a},o),{},{components:t})):n.createElement(k,i({ref:a},o))}));function N(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var m in a)hasOwnProperty.call(a,m)&&(l[m]=a[m]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var p=2;p<r;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4437:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=t(87462),s=(t(67294),t(3905));const r={},i="Advanced Encryption Standard (AES)",l={unversionedId:"Year3/3077/08",id:"Year3/3077/08",title:"Advanced Encryption Standard (AES)",description:"- Superseded DES as a standard in 2002",source:"@site/docs/Year3/3077/08.md",sourceDirName:"Year3/3077",slug:"/Year3/3077/08",permalink:"/Year3/3077/08",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year3",previous:{title:"Finite Field Arithmetic",permalink:"/Year3/3077/07"},next:{title:"Modes of operation",permalink:"/Year3/3077/09"}},m={},p=[{value:"AES",id:"aes",level:2},{value:"S-Box",id:"s-box",level:2},{value:"Properties",id:"properties",level:3},{value:"AES Diffusion",id:"aes-diffusion",level:2},{value:"Implementation",id:"implementation",level:2}],o={toc:p};function c(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"advanced-encryption-standard-aes"},"Advanced Encryption Standard (AES)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Superseded DES as a standard in 2002"),(0,s.kt)("li",{parentName:"ul"},"Standard built around the Rijnael algorithm"),(0,s.kt)("li",{parentName:"ul"},"Is an SP-Network with a 128-bit block size, and a key length of 128, 192 or 256 bit")),(0,s.kt)("h2",{id:"aes"},"AES"),(0,s.kt)("p",null,"Built around finite fields"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Uses rounds of 4 layers, and a final round of 3"),(0,s.kt)("li",{parentName:"ul"},"Bytes are represented as a 4x4 block called the state")),(0,s.kt)("p",null,"SubBytes\nShiftRows\nMixcolumns"),(0,s.kt)("h2",{id:"s-box"},"S-Box"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The AES s-box is based around the multiplicative inverse of 8-bit values in GF(",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mn",{parentName:"msup"},"8"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^8")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"8")))))))))))),")"),(0,s.kt)("li",{parentName:"ul"},"This is a strongly non-linear mapping"),(0,s.kt)("li",{parentName:"ul"},"The inverse .. then undergo an affine transformation to produce the final s-box"),(0,s.kt)("li",{parentName:"ul"},"This destroys any remaining mathematical structures")),(0,s.kt)("h3",{id:"properties"},"Properties"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Simply described, and is bijective, as invertible 1:1 mapping"),(0,s.kt)("li",{parentName:"ul"},"Has no fixed points"),(0,s.kt)("li",{parentName:"ul"},"No inverse fixed points"),(0,s.kt)("li",{parentName:"ul"},"Minimisation of the largest non-trivial correlation between linear combinations of input bits and linear combination of output bits"),(0,s.kt)("li",{parentName:"ul"},"Minimisation of the largest non-trivial value in the EXOR table")),(0,s.kt)("h2",{id:"aes-diffusion"},"AES Diffusion"),(0,s.kt)("p",null,"Consists of two layers"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Shift Rows"),(0,s.kt)("li",{parentName:"ol"},"Mix Columns\nShift rows simply moves bytes around the block")),(0,s.kt)("p",null,"Mix columns performs a linear mixing of bytes within each column\nAll the input bytes in a column influence all the output bytes"),(0,s.kt)("h2",{id:"implementation"},"Implementation"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"All additions and subtractions are XOR"),(0,s.kt)("li",{parentName:"ol"},"Multiply by 01 has no effect"),(0,s.kt)("li",{parentName:"ol"},"Multiply by 02 (x) is simply a left shift followed by modular reduction",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Left shift multiples by x"),(0,s.kt)("li",{parentName:"ul"},"If the original ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"x"),(0,s.kt)("mn",{parentName:"msup"},"7"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"x^7")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"7"))))))))))))," bit was set, then we must XOR with ",(0,s.kt)("inlineCode",{parentName:"li"},"0x1B")))),(0,s.kt)("li",{parentName:"ol"},"Multiple by 03 ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"x"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(x+1)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"x"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")")))))," is simply ",(0,s.kt)("inlineCode",{parentName:"li"},"xtime(a)^a"))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"AES is very fast in software and pretty fast in hardware"),(0,s.kt)("li",{parentName:"ul"},"CPU instructions in AES-NI makes AES faster"),(0,s.kt)("li",{parentName:"ul"},"Much of algorithm can be converted into series of lookup tables",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Trade-off between speed or space"))),(0,s.kt)("li",{parentName:"ul"},"There are numerous cache-timing and other attacks possible",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Implementation must be constant time"),(0,s.kt)("li",{parentName:"ul"},"CPU instructions help mitigate this"))),(0,s.kt)("li",{parentName:"ul"},"IN general AES is much harder to implement safely than ChaCha20")))}c.isMDXComponent=!0}}]);