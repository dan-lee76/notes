"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[5272],{3905:(e,a,t)=>{t.d(a,{Zo:()=>o,kt:()=>N});var n=t(7294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function m(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?m(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},m=Object.keys(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)t=m[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=n.createContext({}),i=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},o=function(e){var a=i(e.components);return n.createElement(p.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},k=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,m=e.originalType,p=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),k=i(t),N=s,h=k["".concat(p,".").concat(N)]||k[N]||c[N]||m;return t?n.createElement(h,r(r({ref:a},o),{},{components:t})):n.createElement(h,r({ref:a},o))}));function N(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var m=t.length,r=new Array(m);r[0]=k;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l.mdxType="string"==typeof e?e:s,r[1]=l;for(var i=2;i<m;i++)r[i]=t[i];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},5802:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>m,metadata:()=>l,toc:()=>i});var n=t(7462),s=(t(7294),t(3905));const m={},r="17. Page Replacement, Working/Resident Threads & Thrashing",l={unversionedId:"Year2/2007/17",id:"Year2/2007/17",title:"17. Page Replacement, Working/Resident Threads & Thrashing",description:"18/11/22",source:"@site/docs/Year2/2007/17.md",sourceDirName:"Year2/2007",slug:"/Year2/2007/17",permalink:"/Year2/2007/17",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year2",previous:{title:"16. Virtual Memory & Page Replacement",permalink:"/Year2/2007/16"},next:{title:"18. Disk Scheduling",permalink:"/Year2/2007/18"}},p={},i=[{value:"Page Replacement",id:"page-replacement",level:2},{value:"Second Chance FIFO",id:"second-chance-fifo",level:3},{value:"(Dis)advantages",id:"disadvantages",level:4},{value:"The Clock Replacement Algorithm",id:"the-clock-replacement-algorithm",level:3},{value:"Not Recently Used (NRU)",id:"not-recently-used-nru",level:3},{value:"Least-Recently-Used",id:"least-recently-used",level:3},{value:"Summary",id:"summary",level:3},{value:"Resident Set",id:"resident-set",level:2},{value:"Working Sets",id:"working-sets",level:2},{value:"Resident Sets",id:"resident-sets",level:2},{value:"Paging Daemon",id:"paging-daemon",level:2},{value:"Thrashing",id:"thrashing",level:2},{value:"Causes",id:"causes",level:3},{value:"Prevention",id:"prevention",level:3}],o={toc:i};function c(e){let{components:a,...m}=e;return(0,s.kt)("wrapper",(0,n.Z)({},o,m,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"17-page-replacement-workingresident-threads--thrashing"},"17. Page Replacement, Working/Resident Threads & Thrashing"),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"18/11/22")),(0,s.kt)("h2",{id:"page-replacement"},"Page Replacement"),(0,s.kt)("h3",{id:"second-chance-fifo"},"Second Chance FIFO"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"If a page at the front of the line has not been referenced it is evicted"),(0,s.kt)("li",{parentName:"ul"},"If the reference bit is set, the page is placed at the end of the list and reference bit reset")),(0,s.kt)("h4",{id:"disadvantages"},"(Dis)advantages"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Works better than standard FIFO"),(0,s.kt)("li",{parentName:"ul"},"Relatively simple, but it is costly to implement because the list is constantly changing (pages have to be added to the end of the list)"),(0,s.kt)("li",{parentName:"ul"},"It can degrade to FIFO if all pages were initially referenced")),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(2327).Z,width:"905",height:"322"})),(0,s.kt)("h3",{id:"the-clock-replacement-algorithm"},"The Clock Replacement Algorithm"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Second-chance implementation can be improved by maintaining the page list as a circle.",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"A pointer points to the last visited page"),(0,s.kt)("li",{parentName:"ul"},"It is faster, but can still be slow if the list is long")))),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(9067).Z,width:"741",height:"644"})),(0,s.kt)("h3",{id:"not-recently-used-nru"},"Not Recently Used (NRU)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"For NRU, referenced and modified bits are kept in the page table",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Referenced bits are set 0 at the start, and reset periodically; system clock interrupt or when searching the list"))),(0,s.kt)("li",{parentName:"ul"},"Four different page 'types' exist",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"class 0: not referenced recently, not modified"),(0,s.kt)("li",{parentName:"ul"},"class 1: not referenced recently, modified"),(0,s.kt)("li",{parentName:"ul"},"class 2: referenced recently, not modified"),(0,s.kt)("li",{parentName:"ul"},"class 3: referenced recently, modified"))),(0,s.kt)("li",{parentName:"ul"},"Page table entries are inspected upon every page fault",(0,s.kt)("ol",{parentName:"li"},(0,s.kt)("li",{parentName:"ol"},"Find a page from class 0 to be removed"),(0,s.kt)("li",{parentName:"ol"},"If step 1 fails, scan again looking for class 1. During this scan, set the reference bit to 0 on ",(0,s.kt)("strong",{parentName:"li"},"each page that is bypassed")),(0,s.kt)("li",{parentName:"ol"},"If step 2 fails, start again from step 1 (Now we should find elements from class 2 and  3 that have been moved to class 0 or 1)"))),(0,s.kt)("li",{parentName:"ul"},"The NRU algorithm provides a reasonable performance and is easy to understand and implement")),(0,s.kt)("h3",{id:"least-recently-used"},"Least-Recently-Used"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Evicts the page that has not been used the longest",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"OS must keep track of when a page was last used"),(0,s.kt)("li",{parentName:"ul"},"Every page table entry contains a field for the counter"),(0,s.kt)("li",{parentName:"ul"},"This is not cheap to implement as need to maintain a list of pages which are sorted in the order in which they have been used (or search for the page)"))),(0,s.kt)("li",{parentName:"ul"},"The algorithm can be implemented in hardware using a counter that is incremented after each instruction\n",(0,s.kt)("img",{src:t(4801).Z,width:"1539",height:"497"}))),(0,s.kt)("h3",{id:"summary"},"Summary"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Optimal Page Replacement")," - Optimal but not realisable"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"FIFO")," page replacement - Poor performance, but easy to implement",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Second Change Replacement")," - Better than FIFO, not great implementation"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Clock Replacement")," - Easy maintenance of the list, can still be slow"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Not Recently Used (NRU)")," - Easy to understand, moderately efficient"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Least recently used (LRU)")," - Good approx. To optimal. More difficult to implement (hardware may help)")),(0,s.kt)("h2",{id:"resident-set"},"Resident Set"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Small resident sets enable to store more processes in memory ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2192")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\to")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.3669em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"\u2192")))))," improved CPU utilisation"),(0,s.kt)("li",{parentName:"ul"},"Small resident sets may result in more page faults"),(0,s.kt)("li",{parentName:"ul"},"Large resident sets may no longer reduce the page fault rate (diminishing returns)"),(0,s.kt)("li",{parentName:"ul"},"Trade-off exists between the sizes of the resident sets and system utilisation"),(0,s.kt)("li",{parentName:"ul"},"Can be fixed or variable"),(0,s.kt)("li",{parentName:"ul"},"For variable sized resident sets, replacement polices can be:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Local - A page of the same process is replaced"),(0,s.kt)("li",{parentName:"ul"},"Global - Page can be taken away from a different process"))),(0,s.kt)("li",{parentName:"ul"},"Variable sized sets require careful evaluation of their size when a local scope is used (often set or the page fault frequency)")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Set of instructions which memory spends the most time in but may not use?")),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(3062).Z,width:"1602",height:"926"})),(0,s.kt)("h2",{id:"working-sets"},"Working Sets"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The resident set comprises the set of pages of the process that are in memory"),(0,s.kt)("li",{parentName:"ul"},"The working set ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"W"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"t"),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mi",{parentName:"mrow"},"k"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"W(t,k)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"W"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")")))))," comprises the set referenced pages in the last ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"k")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")))))," (= working set window) virtual time units for the process <- Needs monitoring"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"k")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")))))," can be defined as 'memory references' or as 'actual process time'",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Set of most recently used pages"),(0,s.kt)("li",{parentName:"ul"},"Set of pages used within a pre-specific time interval"))),(0,s.kt)("li",{parentName:"ul"},"Working Set size can be used as a guide for the number frames that should be allocated to a process\n",(0,s.kt)("img",{src:t(2778).Z,width:"820",height:"395"}))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Choosing the right value for ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"k")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")))))," is paramount",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Too small: inaccurate, pages are missing"),(0,s.kt)("li",{parentName:"ul"},"Too large: too many unused pages present"),(0,s.kt)("li",{parentName:"ul"},"Infinity: all pages of the process are in the working set"))),(0,s.kt)("li",{parentName:"ul"},"Working sets can be used to guide the size of the resident sets; monitor the working set, remove pages from the resident set that are not in the working set"),(0,s.kt)("li",{parentName:"ul"},"Calculating the working set constantly is costly to maintain and not practical"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Page fault frequency (PFF)")," - can be use as an approximation",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"If PFF is increased -> need to increase ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"k")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")))))),(0,s.kt)("li",{parentName:"ul"},"If PFF is very reduced -> may try to decrease ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"k")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k"))))))))),(0,s.kt)("h2",{id:"resident-sets"},"Resident Sets"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Global replacement policies can select frames from the entire set; they can be taken from other processes",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Frames are allocated dynamically to processes"),(0,s.kt)("li",{parentName:"ul"},"Processes cannot control their own page fault frequency; the PFF of one process is influenced by other processes"))),(0,s.kt)("li",{parentName:"ul"},"Local replacement policies can only select frames that are allocated to the current process",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Every process has a fixed fraction of memory"),(0,s.kt)("li",{parentName:"ul"},"The locally 'oldest page' is not necessarily the globally 'oldest page'"))),(0,s.kt)("li",{parentName:"ul"},"Windows uses a variable approach with local replacement"),(0,s.kt)("li",{parentName:"ul"},"Page replacements algorithms explained before can use both policies")),(0,s.kt)("h2",{id:"paging-daemon"},"Paging Daemon"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"It is more efficient to proactively keep a number of free pages for future page faults",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"If not, we may have to find a page to evict and we write it to the drive first when a  page fault occurs"))),(0,s.kt)("li",{parentName:"ul"},"Many systems have a background process called paging daemon ",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Process runs at periodic intervals"),(0,s.kt)("li",{parentName:"ul"},"It inspects the state of the frames and, if too few frames are few, it selects pages to evict."))),(0,s.kt)("li",{parentName:"ul"},"Paging daemons can be combined with buffering (free and modified lists) ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2192")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\to")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.3669em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"\u2192")))))," write the modified pages but keep them in main memory when possible",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"When a page has been modified - it must be updated in the drive when it is swapped out"),(0,s.kt)("li",{parentName:"ul"},"Set the modified bit to 0 - which can have an effect on the page replacement algorithms")))),(0,s.kt)("h2",{id:"thrashing"},"Thrashing"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Assume all available pages are in active use and a new pages need to be loaded:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Page will be evicted will have to be reloaded soon afterwards"))),(0,s.kt)("li",{parentName:"ul"},"Thrashing occurs when pages are swapped out and loaded again immediately"),(0,s.kt)("li",{parentName:"ul"},"CPU utilisation is low ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2192")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\to")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.3669em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"\u2192")))))," scheduler increases degree of multi-programming",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Add more processes ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"p"),(0,s.kt)("mi",{parentName:"msup"},"n")),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(1-p^n)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"))))),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"p"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"I"),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,s.kt)("mi",{parentName:"mrow"},"O")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"p = I/O")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"I"),(0,s.kt)("span",{parentName:"span",className:"mord"},"/"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O")))))," wait time, ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"n")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," is the number of processes"))),(0,s.kt)("li",{parentName:"ul"},"Frames are allocated to new processes and taken away from existing processes"))),(0,s.kt)("li",{parentName:"ul"},"CPU utilisation drops further ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2192")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\to")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.3669em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"\u2192")))))," scheduler increases degree of multi-programming")),(0,s.kt)("h3",{id:"causes"},"Causes"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Degree of multi-programming is too high i.e. the total demand (sum of all working set sizes) exceeds supply"),(0,s.kt)("li",{parentName:"ul"},"Individual process is allocated too few pages")),(0,s.kt)("h3",{id:"prevention"},"Prevention"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Using good page replacement policies reducing the degree of multi-programming or adding more memory"),(0,s.kt)("li",{parentName:"ul"},"The page fault frequency can be used to detect that a system is thrashing")))}c.isMDXComponent=!0},2327:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/20221118105359-b372b7760cb9770d71eec85e99e9cc40.png"},9067:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/20221118105651-1a9368381f755f10c2edd2301bf94e6a.png"},4801:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/20221118113210-8199d7c4be5f228800312e4ff10bbb19.png"},3062:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/20221118114108-742d6a27bcc9004980cbe1f064ccbdd2.png"},2778:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/20221118140738-cbca56bb60307ea4c90e22c40c5fec67.png"}}]);