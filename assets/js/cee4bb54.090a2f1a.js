"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[9509],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=c(a),d=n,k=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return a?r.createElement(k,s(s({ref:t},m),{},{components:a})):r.createElement(k,s({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},9835:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={},s="0. Client-Server Java",o={unversionedId:"Year2/2014/00",id:"Year2/2014/00",title:"0. Client-Server Java",description:"31/01/23",source:"@site/docs/Year2/2014/00.md",sourceDirName:"Year2/2014",slug:"/Year2/2014/00",permalink:"/Year2/2014/00",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year2",previous:{title:"18. Revision",permalink:"/Year2/2013/18"},next:{title:"Year in Industry",permalink:"/Year2/Misc/Industry"}},l={},c=[{value:"Services",id:"services",level:3},{value:"Summary",id:"summary",level:3},{value:"Java Socket Programming",id:"java-socket-programming",level:2},{value:"Sockets",id:"sockets",level:3},{value:"Message Destinations",id:"message-destinations",level:3},{value:"Summary",id:"summary-1",level:3},{value:"Java TCP programming",id:"java-tcp-programming",level:2},{value:"TCP Considerations",id:"tcp-considerations",level:3},{value:"Summary",id:"summary-2",level:3}],m={toc:c};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"0-client-server-java"},"0. Client-Server Java"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"31/01/23")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Distributed System")," - Hardware or software components located at network computers communicate and coordinate their actions only by passing messages. They are everywhere!"),(0,n.kt)("p",null,"Most applications are based on ",(0,n.kt)("strong",{parentName:"p"},"sharing resources"),". This is pervasive, powerful and often taken-for-granted feature of networked computer systems. "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Physical")," - printers, disk, computers"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Data")," - resources, documents, databases, webpages"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Computational/algorithmic")," - Search engines, or machine-learning algorithms")),(0,n.kt)("h3",{id:"services"},"Services"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Distinct part of a computer system that manages a collection of related resources and presents their functionality to users and applications. ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Runs on a specific machine which physically hosts the managed resources"),(0,n.kt)("li",{parentName:"ul"},"Provides a specific and controlled interface - usually over a network "))),(0,n.kt)("li",{parentName:"ul"},"Many distributed systems consist only of clients making requests to servers to access/alter the resources managed by that service")),(0,n.kt)("h3",{id:"summary"},"Summary"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Distributed system is one in which ",(0,n.kt)("em",{parentName:"li"},"hardware or software components located at network components communicate their actions by passing messages")),(0,n.kt)("li",{parentName:"ul"},"Typically distributed systems are build around sharing of resources, whether physical or informational"),(0,n.kt)("li",{parentName:"ul"},"Resources are typically encapsulated and selectively exposed over the network as services that are accessed by clients."),(0,n.kt)("li",{parentName:"ul"},"Clients and servers are typically both OS processes, and communicate directly with each other")),(0,n.kt)("h2",{id:"java-socket-programming"},"Java Socket Programming"),(0,n.kt)("p",null,"Messages are sent and received via sender and receiver queues/buffers. Sender performs a ",(0,n.kt)("em",{parentName:"p"},"send")," operation; receiver a ",(0,n.kt)("em",{parentName:"p"},"receive")," operation. Each endpoint is represented by a socket"),(0,n.kt)("h3",{id:"sockets"},"Sockets"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Provides an abstract representation of a communication endpoint within a process (TCP, UDP)"),(0,n.kt)("li",{parentName:"ul"},"To send and receive messages a (TCP/UDP) socket must be bound to a specific port"),(0,n.kt)("li",{parentName:"ul"},"A single process can have many sockets, but only one TCP server or UDP socket on a host can be bound to a given port at any time")),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(4246).Z,width:"747",height:"331"})),(0,n.kt)("h3",{id:"message-destinations"},"Message Destinations"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Send to the pair (Internet address, port number)"),(0,n.kt)("li",{parentName:"ul"},"If a clients identifies a server using a specific IP address then the server must always have that IP address"),(0,n.kt)("li",{parentName:"ul"},"If clients use names then a name service is used to translate this to network location at run time")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Address Resolution")," - Every OS also provides an API for host name resolution. Internally the host will us DNS and/or other name services to look up the corresponding IP address"),(0,n.kt)("h3",{id:"summary-1"},"Summary"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Socket represents a TCP or UDP communication end-point within a process"),(0,n.kt)("li",{parentName:"ul"},"A name resolution API is needed")),(0,n.kt)("h2",{id:"java-tcp-programming"},"Java TCP programming"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ServerSocket")," - Represents a server TCP socket. Binds to a particular port"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Socket")," - Represents one end of a TCP connection",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Created by a client with a specified server IP address and port number"),(0,n.kt)("li",{parentName:"ul"},"Has a ",(0,n.kt)("inlineCode",{parentName:"li"},"java.io.InputStream")," to receive bytes from and ",(0,n.kt)("inlineCode",{parentName:"li"},"java.io.OutputStream")," to send bytes to")))),(0,n.kt)("h3",{id:"tcp-considerations"},"TCP Considerations"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Message Size")," - Application reads/writes any number of bytes at a time until the connection is closed"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Message Destination")," - A server can accept connection requests from any client"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Blocking")," - Limited amount of data is buffered at sender and receiver sockets and sends will block once the sender buffer is full"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Failure Model")," - Communication is reliable short of complete failure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Lost messages")," are automatically re-transmitted. If not resolved within a time limit, whole connection fails"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Duplicate")," packets are discarded and ",(0,n.kt)("strong",{parentName:"li"},"out-of-order")," packets are reordered using sequence numbers"))),(0,n.kt)("li",{parentName:"ul"},"Uses - Everything required to transfer data reliably and/or in large amounts (HTTPS, SSH, FTP, SMTP)")),(0,n.kt)("h3",{id:"summary-2"},"Summary"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"TCP provides a reliable connection-oriented bidirectional byte-based stream service"),(0,n.kt)("li",{parentName:"ul"},"Java API comprises of ",(0,n.kt)("inlineCode",{parentName:"li"},"java.net.Socket")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"java.net.ServerSocket"))))}u.isMDXComponent=!0},4246:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Pasted image 20230131112654-cccc73d19ea1184c2baf68dd31f9498c.png"}}]);