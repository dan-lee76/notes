"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[8091],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>k});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var i=n.createContext({}),l=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},o=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),c=l(a),k=s,N=c["".concat(i,".").concat(k)]||c[k]||u[k]||r;return a?n.createElement(N,p(p({ref:t},o),{},{components:a})):n.createElement(N,p({ref:t},o))}));function k(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,p=new Array(r);p[0]=c;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:s,p[1]=m;for(var l=2;l<r;l++)p[l]=a[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},95762:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>l});var n=a(87462),s=(a(67294),a(3905));const r={},p="Data Encryption Standard (DES)",m={unversionedId:"Year3/3077/04",id:"Year3/3077/04",title:"Data Encryption Standard (DES)",description:"Block Ciphers",source:"@site/docs/Year3/3077/04.md",sourceDirName:"Year3/3077",slug:"/Year3/3077/04",permalink:"/Year3/3077/04",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year3",previous:{title:"Modern Steam Ciphers",permalink:"/Year3/3077/03"},next:{title:"DES and Cryptanalysis",permalink:"/Year3/3077/05"}},i={},l=[{value:"Block Ciphers",id:"block-ciphers",level:2},{value:"Pseudorandom Permutations",id:"pseudorandom-permutations",level:2},{value:"Where to begin",id:"where-to-begin",level:2},{value:"Feistel Networks",id:"feistel-networks",level:2},{value:"Single Feistel Round",id:"single-feistel-round",level:3},{value:"About Feistel Networks",id:"about-feistel-networks",level:3},{value:"DES",id:"des",level:2},{value:"The <code>f()</code> Function",id:"the-f-function",level:3},{value:"Expansion",id:"expansion",level:3},{value:"Substitution Boxes",id:"substitution-boxes",level:3}],o={toc:l};function u(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"data-encryption-standard-des"},"Data Encryption Standard (DES)"),(0,s.kt)("h2",{id:"block-ciphers"},"Block Ciphers"),(0,s.kt)("p",null,"Encrypt whole block at a time\nSize varies, often 64 or 128\nMore common than stream ciphers"),(0,s.kt)("h2",{id:"pseudorandom-permutations"},"Pseudorandom Permutations"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Pseudorandom permutation is a function that cannot be distinguished from a random permutation"),(0,s.kt)("li",{parentName:"ul"},"Maps a set of values ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,s.kt)("mn",{parentName:"mrow"},"0"),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mo",{parentName:"msup",stretchy:"false"},"}"),(0,s.kt)("mi",{parentName:"msup"},"n")),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,s.kt)("mn",{parentName:"mrow"},"0"),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mo",{parentName:"msup",stretchy:"false"},"}"),(0,s.kt)("mn",{parentName:"msup"},"8")),(0,s.kt)("mo",{parentName:"mrow"},"\u2192"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"{"),(0,s.kt)("mn",{parentName:"mrow"},"0"),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mo",{parentName:"msup",stretchy:"false"},"}"),(0,s.kt)("mi",{parentName:"msup"},"n"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\{0,1\\}^n \\times \\{0,1\\}^8 \\to \\{0,1\\}^n")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,s.kt)("span",{parentName:"span",className:"mord"},"0"),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mclose"},(0,s.kt)("span",{parentName:"span",className:"mclose"},"}"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\xd7"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,s.kt)("span",{parentName:"span",className:"mord"},"0"),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mclose"},(0,s.kt)("span",{parentName:"span",className:"mclose"},"}"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"8")))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"\u2192"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mopen"},"{"),(0,s.kt)("span",{parentName:"span",className:"mord"},"0"),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mclose"},(0,s.kt)("span",{parentName:"span",className:"mclose"},"}"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))))))),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"For any key, the function F is a bijection"),(0,s.kt)("li",{parentName:"ul"},"There is an efficient algorithm to calculate F(x) for all keys and all messages")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Confusion"),": Obscure the relationship between plaintext, key and ciphertext (lookup table)\n",(0,s.kt)("strong",{parentName:"p"},"Diffusion"),": Influence of each plaintext and key bit is distributed throughout the ciphertext"),(0,s.kt)("h2",{id:"where-to-begin"},"Where to begin"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Confusion is often achieved through substitution"),(0,s.kt)("li",{parentName:"ul"},"Diffusion is usually achieved via permutation. Swapping or otherwise mixing bits or bytes")),(0,s.kt)("h2",{id:"feistel-networks"},"Feistel Networks"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"One mechanism used to create block ciphers"),(0,s.kt)("li",{parentName:"ul"},"Developed by Horst Feistel while he worked at IBM"),(0,s.kt)("li",{parentName:"ul"},"Underpins DES, GOST, Blowfish, Twofish and numerous other ciphers")),(0,s.kt)("h3",{id:"single-feistel-round"},"Single Feistel Round"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"ADD IMAGE")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"During each round, only half of the block is encrypted"),(0,s.kt)("li",{parentName:"ul"},"F is pseudorandom function")),(0,s.kt)("h3",{id:"about-feistel-networks"},"About Feistel Networks"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"1 or 2 rounds is not sufficient")),(0,s.kt)("p",null,"That if ",(0,s.kt)("strong",{parentName:"p"},"f")," is a cryptographically secure pseudorandom function then:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"3 rounds are sufficient to make a pseudorandom permutation"),(0,s.kt)("li",{parentName:"ul"},"4 rounds are sufficient to make a strong pseudorandom permutation")),(0,s.kt)("p",null,"Balanced Feistel networks: L and R are equal sizes\nUnbalanced Feistel networks: L and R can be different sizes"),(0,s.kt)("h2",{id:"des"},"DES"),(0,s.kt)("p",null,"1972: NBS (now NIST) put out a call for a US standard for encryption\n1974: IBM propose DES, built upon a previous family of ciphers developed by Horst Feistel called Lucifer\n1976: NBS accepts an altered version of DES following consultation with NSA"),(0,s.kt)("p",null,"64-bit block size\n56-bit key\n16 rounds"),(0,s.kt)("h3",{id:"the-f-function"},"The ",(0,s.kt)("inlineCode",{parentName:"h3"},"f()")," Function"),(0,s.kt)("h3",{id:"expansion"},"Expansion"),(0,s.kt)("p",null,"Adds diffusion.\nIncreases from 32 to 48 bits to match the round key"),(0,s.kt)("h3",{id:"substitution-boxes"},"Substitution Boxes"),(0,s.kt)("p",null,"Adds confusion\nThe S-boxes map 6-bit inputs to 4-bit outputs\nThere are 8 S-boxes in total, each in different"),(0,s.kt)("p",null,"S-boxes need to be highly non-linear\nThe previous simple systems of linear equations such as we saw in LFSRs\nKey design principles"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"No output bit should be too close to a linear combination of input bits"),(0,s.kt)("li",{parentName:"ol"},"1 bit change input should lead to at least 2 bit output"),(0,s.kt)("li",{parentName:"ol"},"If only the 4 middle bits change, each output must occur exactly once"),(0,s.kt)("li",{parentName:"ol"},"If the first two bits are different but the last two are identical, the output must differ"),(0,s.kt)("li",{parentName:"ol"},"For any non-zero difference in input, no more 8/32 inputs exhibiting this difference should share the same output difference"),(0,s.kt)("li",{parentName:"ol"},"A collision (Zero difference) is only .....")),(0,s.kt)("p",null,"At the end of f(.) is a permutation\nThis moves bits between S-boxes on the next round"))}u.isMDXComponent=!0}}]);