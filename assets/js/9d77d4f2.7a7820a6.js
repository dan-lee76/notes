"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[8665],{3905:function(e,n,a){a.d(n,{Zo:function(){return p},kt:function(){return d}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),c=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(a),d=r,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return a?t.createElement(f,s(s({ref:n},p),{},{components:a})):t.createElement(f,s({ref:n},p))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7094:function(e,n,a){a.r(n),a.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var t=a(7462),r=a(3366),i=(a(7294),a(3905)),s=["components"],o={},l=void 0,c={unversionedId:"Year1/AI/22.02.22 - Machine Learning_ Techniques",id:"Year1/AI/22.02.22 - Machine Learning_ Techniques",title:"22.02.22 - Machine Learning_ Techniques",description:"Types of Tasks",source:"@site/docs/Year1/1008-AI/22.02.22 - Machine Learning_ Techniques.md",sourceDirName:"Year1/1008-AI",slug:"/Year1/AI/22.02.22 - Machine Learning_ Techniques",permalink:"/Year1/AI/22.02.22 - Machine Learning_ Techniques",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"22.02.15 - Machine Learning (INTRO)",permalink:"/Year1/AI/22.02.15 - Machine Learning (INTRO)"},next:{title:"22.03.01 - Search Space and Search Tree",permalink:"/Year1/AI/22.03.01 - Search Space and Search Tree"}},p={},u=[{value:"Types of Tasks",id:"types-of-tasks",level:2},{value:"Supervised Learning",id:"supervised-learning",level:2},{value:"Regression",id:"regression",level:3},{value:"Decision Tree",id:"decision-tree",level:3},{value:"Neural Networks",id:"neural-networks",level:3},{value:"Supervised Learning: Applications",id:"supervised-learning-applications",level:2},{value:"Clustering",id:"clustering",level:3},{value:"Association Rules",id:"association-rules",level:3}],m={toc:u};function d(e){var n=e.components,a=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"types-of-tasks"},"Types of Tasks"),(0,i.kt)("p",null,"Supervised Learning - Function from labelled training data, each example consisting of an input and a desired output (Classifications, regression)"),(0,i.kt)("p",null,"Unsupervised Learning - Function to describe hidden structure from unlabelled data. There is basically no output"),(0,i.kt)("p",null,"Classification - Learn to predict to which set a instance belongs to based on pre-labeled (classified) instances\nSupervised learning, many approaches: regression, decision trees, neural networks"),(0,i.kt)("h2",{id:"supervised-learning"},"Supervised Learning"),(0,i.kt)("h3",{id:"regression"},"Regression"),(0,i.kt)("p",null,"Estimated relationship between variable Y and variable(s) X\nFunction: Based on the given data to minimise its mean squared error (MSE) to 'fit' the data"),(0,i.kt)("h3",{id:"decision-tree"},"Decision Tree"),(0,i.kt)("p",null,"Internal Nodes: decision rules on features (decision variables, input)\nLeaf Nodes: a predicted class label(output)\n|Pros|Cons|\n|----|----|\n|Reasonable training time| Only simple decision boundaries|\n|Handle large features|Problem with lots of missing data|\n|Easy to implement|Cannot handle complicated relationship|\n|Easy to interpret| "),(0,i.kt)("h3",{id:"neural-networks"},"Neural Networks"),(0,i.kt)("p",null,"Set of neurons connected by directed weighted edges\n|Pros|Cons|\n|----|----|\n|Cam learn more complicated class boundaries|Hard to implement|\n|Can be more accurate| Slow training time|\n|Can handle large number of features|Can over fit the data|\n| |Hard to interpret|"),(0,i.kt)("h2",{id:"supervised-learning-applications"},"Supervised Learning: Applications"),(0,i.kt)("h3",{id:"clustering"},"Clustering"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Given: Un-labeled data set D and Similarity/distance metric"),(0,i.kt)("li",{parentName:"ul"},"Goal: Find 'natural' partitioning, or groups of similar data points"),(0,i.kt)("li",{parentName:"ul"},"Application: Divide a market into distinct subsets of customers")),(0,i.kt)("h3",{id:"association-rules"},"Association Rules"),(0,i.kt)("p",null,"Discover correlation between any two or more variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Given: Set of records containing items"),(0,i.kt)("li",{parentName:"ul"},"Goal: Produce dependency rules, to predict occurrence of one variable based on occurrences of another variable"),(0,i.kt)("li",{parentName:"ul"},"Application: Market basket analysis")),(0,i.kt)("p",null,"Correlation ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mo",{parentName:"mrow",mathvariant:"normal"},"\u2260")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\ne")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},(0,i.kt)("span",{parentName:"span",className:"mrel"},(0,i.kt)("span",{parentName:"span",className:"mord vbox"},(0,i.kt)("span",{parentName:"span",className:"thinbox"},(0,i.kt)("span",{parentName:"span",className:"rlap"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.kt)("span",{parentName:"span",className:"inner"},(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mrel"},"\ue020"))),(0,i.kt)("span",{parentName:"span",className:"fix"}))))),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="))))))," Causation"))}d.isMDXComponent=!0}}]);