"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[554],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),m=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=m(a),d=r,h=p["".concat(l,".").concat(d)]||p[d]||u[d]||s;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var m=2;m<s;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},6966:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const s={},o="Alternatives to Inner Classes",i={unversionedId:"Year1/Programming Paradigms/Java/22.03.25 - Anonymous Classes",id:"Year1/Programming Paradigms/Java/22.03.25 - Anonymous Classes",title:"Alternatives to Inner Classes",description:"Only had one place in the code where we created the iterator subclass and nowhere where its name is used.",source:"@site/docs/Year1/1009 - Programming Paradigms/Java/22.03.25 - Anonymous Classes.md",sourceDirName:"Year1/1009 - Programming Paradigms/Java",slug:"/Year1/Programming Paradigms/Java/22.03.25 - Anonymous Classes",permalink:"/Year1/Programming Paradigms/Java/22.03.25 - Anonymous Classes",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"Iterator Pattern",permalink:"/Year1/Programming Paradigms/Java/22.03.18 - Iterator Pattern"},next:{title:"22.03.31 - Design Patterns",permalink:"/Year1/Programming Paradigms/Java/22.03.31 - Design Patterns"}},l={},m=[{value:"Variable Capture",id:"variable-capture",level:2},{value:"Expressions",id:"expressions",level:2},{value:"Summary",id:"summary",level:2}],c={toc:m};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"alternatives-to-inner-classes"},"Alternatives to Inner Classes"),(0,r.kt)("p",null,"Only had one place in the code where we created the iterator subclass and nowhere where its name is used.\nMight be annoying to keep creating a class each time we need one object somewhere in the code"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An anonymous class is an inner class without a name."),(0,r.kt)("li",{parentName:"ul"},"Instead of giving a class a name and saying that the class extends/implements some class, name the super-class and then give the implementation of the changes.")),(0,r.kt)("h1",{id:"lambdas"},"Lambdas"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Simpler syntax for an anonymous class when it sub classes : an interface which has only one method"),(0,r.kt)("li",{parentName:"ul"},"Both of these are important!"),(0,r.kt)("li",{parentName:"ul"},"Give it an implementation of the method",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Only one method on the interface so it knows the method name"),(0,r.kt)("li",{parentName:"ul"},"Knows the return type"),(0,r.kt)("li",{parentName:"ul"},"Knows the parameters types"))),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"->")," operator. "),(0,r.kt)("li",{parentName:"ul"},"To the left of the ",(0,r.kt)("inlineCode",{parentName:"li"},"->")," are the parameters"),(0,r.kt)("li",{parentName:"ul"},"To the right is the expression to evaluate to return the result value")),(0,r.kt)("h2",{id:"variable-capture"},"Variable Capture"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Lambda expressions can capture final(constant) variables from the surroundings. This kind of puts a copy of this variable inside the Lambda."),(0,r.kt)("li",{parentName:"ul"},"Can also use member variables, so it can capture the 'this' object")),(0,r.kt)("h2",{id:"expressions"},"Expressions"),(0,r.kt)("p",null,"Can think of them as a way of wrapping up a function in an object\nOnce have an object, we keep an object reference to it\nCan use sub-type polymorphism and treat it as the base-class.\nCan access member variables or final local variables"),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"If need an object to handle a function, could:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create an object of a new top-level class"),(0,r.kt)("li",{parentName:"ul"},"Create an object of an inner class"),(0,r.kt)("li",{parentName:"ul"},"Create an object of an inner class"),(0,r.kt)("li",{parentName:"ul"},"Create an object of an anonymous class"),(0,r.kt)("li",{parentName:"ul"},"Create a Lambda")))}u.isMDXComponent=!0}}]);