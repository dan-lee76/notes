"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[6119],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),k=r,m=d["".concat(s,".").concat(k)]||d[k]||p[k]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4980:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s=void 0,u={unversionedId:"Year1/Software Engineer/22.03.07 - Unit Testing & TDD",id:"Year1/Software Engineer/22.03.07 - Unit Testing & TDD",title:"22.03.07 - Unit Testing & TDD",description:"White Block testing",source:"@site/docs/Year1/1003 - Software Engineer/22.03.07 - Unit Testing & TDD.md",sourceDirName:"Year1/1003 - Software Engineer",slug:"/Year1/Software Engineer/22.03.07 - Unit Testing & TDD",permalink:"/notes/docs/Year1/Software Engineer/22.03.07 - Unit Testing & TDD",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Implementation",permalink:"/notes/docs/Year1/Software Engineer/22.03.01 - Team Coding"},next:{title:"22.03.08 - Release & Acceptance Testing",permalink:"/notes/docs/Year1/Software Engineer/22.03.08 - Release & Acceptance Testing"}},c={},p=[{value:"White Block testing",id:"white-block-testing",level:2},{value:"Black Box testing",id:"black-box-testing",level:2},{value:"Automated",id:"automated",level:2},{value:"Manual",id:"manual",level:2},{value:"Advantages",id:"advantages",level:2},{value:"Other Asserts",id:"other-asserts",level:2},{value:"Good Tests",id:"good-tests",level:2}],d={toc:p};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"white-block-testing"},"White Block testing"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You know the code is supposed to work"),(0,o.kt)("li",{parentName:"ul"},"You tests test for how it is supposed to work")),(0,o.kt)("h2",{id:"black-box-testing"},"Black Box testing"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Where tester doesn't know how the code works"),(0,o.kt)("li",{parentName:"ul"},"Just know what is supposed to output for an input"),(0,o.kt)("li",{parentName:"ul"},"For release testing and user acceptance testing")),(0,o.kt)("h2",{id:"automated"},"Automated"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Large amounts of scripts or coded tests"),(0,o.kt)("li",{parentName:"ul"},"May automate large volume data testing"),(0,o.kt)("li",{parentName:"ul"},"Run as often the code is complied"),(0,o.kt)("li",{parentName:"ul"},"Built into control platform")),(0,o.kt)("h2",{id:"manual"},"Manual"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Higher level"),(0,o.kt)("li",{parentName:"ul"},"Usually run at planned times - end of key stages"),(0,o.kt)("li",{parentName:"ul"},"Can act as a progress gate-keeping activity"),(0,o.kt)("li",{parentName:"ul"},"Usually run on version of code that is 'ready' to test")),(0,o.kt)("h1",{id:"test-driven-development"},"Test Driven Development"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Take spec and start writing tests for a class"),(0,o.kt)("li",{parentName:"ul"},"Auto tests every time run code"),(0,o.kt)("li",{parentName:"ul"},"Whitebox testing")),(0,o.kt)("h2",{id:"advantages"},"Advantages"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Integrates aspects of Specification, Coding and Testing"),(0,o.kt)("li",{parentName:"ul"},"Makes you think how code is used before being built"),(0,o.kt)("li",{parentName:"ul"},"Means you plan and get the bigger picture"),(0,o.kt)("li",{parentName:"ul"},"Also makes you know where the code failed based on the tests")),(0,o.kt)("h1",{id:"junit"},"JUnit"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Framework for writing tests for java code"),(0,o.kt)("li",{parentName:"ul"},"Its added to the project"),(0,o.kt)("li",{parentName:"ul"},"Has special commands to make testing easier")),(0,o.kt)("p",null,"Can write ",(0,o.kt)("inlineCode",{parentName:"p"},"@BeforeAll{}")," functions. This does something before the test, like create text files for the test\nAlso have ",(0,o.kt)("inlineCode",{parentName:"p"},"@AfterAll")," to delete those text files\nCan use this to create bad and good data\nAlso have ",(0,o.kt)("inlineCode",{parentName:"p"},"@BeforeEach")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@AfterEach")),(0,o.kt)("h2",{id:"other-asserts"},"Other Asserts"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"void assertTrue(boolean condition) "),"- Check that a condition is true.\n",(0,o.kt)("inlineCode",{parentName:"p"},"void assertFalse(boolean condition)")," - Check that a condition is false e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"assertFalse(x > 12)"),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"void assertNotNull(Object object)")," - Check that an object isn't null.\n",(0,o.kt)("inlineCode",{parentName:"p"},"void assertNull(Object object)")," - Check that an object is null\n",(0,o.kt)("inlineCode",{parentName:"p"},"void assertSame(boolean condition)")," - Check that two objects are the\nsame (when equals wont work in java)\n",(0,o.kt)("inlineCode",{parentName:"p"},"void assertNotSame(boolean condition)")," - Check they are not"),(0,o.kt)("h1",{id:"good--bad-tests"},"Good & Bad Tests"),(0,o.kt)("p",null," Write the tests first. Need to run the test to make sure it fails"),(0,o.kt)("h2",{id:"good-tests"},"Good Tests"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Line Coverage"),": Has every line of code been tested"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Function Coverage")," - Has every function been tested"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Condition Coverage")," - Has each evaluation point been tested"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Path Coverage")," - Has every possible route through the code been tested"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Entry/Exit coverage")," - has every call/return option been tested"),(0,o.kt)("li",{parentName:"ul"},"Should never have to edit a test")))}k.isMDXComponent=!0}}]);