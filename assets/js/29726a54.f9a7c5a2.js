"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[5789],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,f=c["".concat(s,".").concat(d)]||c[d]||p[d]||o;return a?n.createElement(f,l(l({ref:t},m),{},{components:a})):n.createElement(f,l({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},547:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=["components"],i={},s=void 0,u={unversionedId:"Year1/Programming Paradigms/Java/22.03.03 - Layout Managers and Labels",id:"Year1/Programming Paradigms/Java/22.03.03 - Layout Managers and Labels",title:"22.03.03 - Layout Managers and Labels",description:"Threads and main()",source:"@site/docs/Year1/1009 - Programming Paradigms/Java/22.03.03 - Layout Managers and Labels.md",sourceDirName:"Year1/1009 - Programming Paradigms/Java",slug:"/Year1/Programming Paradigms/Java/22.03.03 - Layout Managers and Labels",permalink:"/Year1/Programming Paradigms/Java/22.03.03 - Layout Managers and Labels",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"Class Libraries",permalink:"/Year1/Programming Paradigms/Java/22.02.25 - Swing GUIs"},next:{title:"Interfaces, Buttons and Event Handlers",permalink:"/Year1/Programming Paradigms/Java/22.03.04 - Interfaces"}},m={},p=[{value:"Threads and main()",id:"threads-and-main",level:2},{value:"Example: JLabel",id:"example-jlabel",level:2},{value:"ColorLabel",id:"colorlabel",level:3},{value:"Example Layout Managers",id:"example-layout-managers",level:2},{value:"JPanel Components",id:"jpanel-components",level:3},{value:"Component Size",id:"component-size",level:3}],c={toc:p};function d(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"threads-and-main"},"Threads and main()"),(0,o.kt)("p",null,"When window created, a thread will be started, but main() thread will still be running"),(0,o.kt)("h2",{id:"example-jlabel"},"Example: JLabel"),(0,o.kt)("p",null,"Can use the sub-class object as if it was the super-class. Then overwrite sections, similar to a theme. Such as font etc.\nCan only call immediate super class"),(0,o.kt)("h3",{id:"colorlabel"},"ColorLabel"),(0,o.kt)("p",null,"Has three attributes:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Colour to draw"),(0,o.kt)("li",{parentName:"ol"},"Width of the border"),(0,o.kt)("li",{parentName:"ol"},"Colour to draw the border")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"this")," - call another instructor of itself"),(0,o.kt)("h2",{id:"example-layout-managers"},"Example Layout Managers"),(0,o.kt)("h3",{id:"jpanel-components"},"JPanel Components"),(0,o.kt)("p",null,"Container for other components.\nCan build up a user interface by putting JPanels inside JPanels"),(0,o.kt)("h3",{id:"component-size"},"Component Size"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pack()")," resizes the frame to fit the contents"),(0,o.kt)("li",{parentName:"ul"},"When you resize the frame, sometimes components will resize to fit in"),(0,o.kt)("li",{parentName:"ul"},"Can set, min, max, preferred"),(0,o.kt)("li",{parentName:"ul"},"Layout manager should not make them smaller than min or larger than max"),(0,o.kt)("li",{parentName:"ul"},"When working out what size, will use preferred size"),(0,o.kt)("li",{parentName:"ul"},"When multiple sizes are possiblejop preferred with be 'preferred'")),(0,o.kt)("p",null,"Common Layouts include:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"FlowLayout()\nBorderLayout()\nGridLayout()\n")))}d.isMDXComponent=!0}}]);