"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[5591],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(r),m=a,g=f["".concat(c,".").concat(m)]||f[m]||p[m]||i;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},369:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={},c=void 0,s={unversionedId:"Year1/Programming Paradigms/Haskell/22.03.02 - Thinking Recursively",id:"Year1/Programming Paradigms/Haskell/22.03.02 - Thinking Recursively",title:"22.03.02 - Thinking Recursively",description:"What are recursive functions?",source:"@site/docs/Year1/1009 - Programming Paradigms/Haskell/22.03.02 - Thinking Recursively.md",sourceDirName:"Year1/1009 - Programming Paradigms/Haskell",slug:"/Year1/Programming Paradigms/Haskell/22.03.02 - Thinking Recursively",permalink:"/docs/Year1/Programming Paradigms/Haskell/22.03.02 - Thinking Recursively",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"22.02.28 - Higher-Order Functions",permalink:"/docs/Year1/Programming Paradigms/Haskell/22.02.28 - Higher-Order Functions"},next:{title:"22.03.07 - Declaring Types and Classes",permalink:"/docs/Year1/Programming Paradigms/Haskell/22.03.07 - Declaring Types and Classes"}},u={},p=[],f={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"What are recursive functions?"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"A recursive function is a function defined in terms of itself, self referential"))),(0,i.kt)("p",null,"Why are they useful?"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Many, if not most functions have a simple recursive definition.\n",(0,i.kt)("em",{parentName:"p"},"fundamentally recursion is the only way of doing any kind of loop"))),(0,i.kt)("p",null,"Why are they difficult at first?"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"Different way of thinking. Alternative way to looping."))),(0,i.kt)("h1",{id:"way-to-write-a-recursive-function"},"Way to write a recursive function"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Name the function"),(0,i.kt)("li",{parentName:"ol"},"Write down its type"),(0,i.kt)("li",{parentName:"ol"},"Enumerate the cases (skeleton)"),(0,i.kt)("li",{parentName:"ol"},"Define the simple cases (Base Case (Non recursive Case))"),(0,i.kt)("li",{parentName:"ol"},"List the 'ingredients'"),(0,i.kt)("li",{parentName:"ol"},"Define the other case"),(0,i.kt)("li",{parentName:"ol"},"Think about the result")))}m.isMDXComponent=!0}}]);