"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[905],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1271:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s=void 0,u={unversionedId:"Year1/Software Engineer/22.03.29 - Software Quality",id:"Year1/Software Engineer/22.03.29 - Software Quality",title:"22.03.29 - Software Quality",description:"Software Quality Management",source:"@site/docs/Year1/1003 - Software Engineer/22.03.29 - Software Quality.md",sourceDirName:"Year1/1003 - Software Engineer",slug:"/Year1/Software Engineer/22.03.29 - Software Quality",permalink:"/Year1/Software Engineer/22.03.29 - Software Quality",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"Agile vs Traditional",permalink:"/Year1/Software Engineer/22.03.28 - Agile vs Traditional"},next:{title:"Software Risks",permalink:"/Year1/Software Engineer/22.04.04 - Risk Management"}},c={},p=[{value:"Software Quality Management",id:"software-quality-management",level:2},{value:"Quality-Driven Culture",id:"quality-driven-culture",level:2},{value:"Traditional Inspections",id:"traditional-inspections",level:2},{value:"QA Reviews and Inspections",id:"qa-reviews-and-inspections",level:2},{value:"Common Inspection Problems",id:"common-inspection-problems",level:2},{value:"Retrospectives vs Postmortems",id:"retrospectives-vs-postmortems",level:2},{value:"Agile Retrospectives",id:"agile-retrospectives",level:3},{value:"Agile Postmortems",id:"agile-postmortems",level:3},{value:"Things you can measure",id:"things-you-can-measure",level:2},{value:"Measure types",id:"measure-types",level:2}],m={toc:p};function d(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"software-quality-management"},"Software Quality Management"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Introduced in 1960s due to software being of bad quality"),(0,o.kt)("li",{parentName:"ul"},"All SE processes are designed to improve software quality"),(0,o.kt)("li",{parentName:"ul"},"The software quality team air to make sure:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"A good SE process is chosen for the project"),(0,o.kt)("li",{parentName:"ul"},"All aspects of the SE process are all done well"))),(0,o.kt)("li",{parentName:"ul"},"SQ means doing every aspect well")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Planning for quality to help create project plans"),(0,o.kt)("li",{parentName:"ol"},"Defining standards and procedures for the whole company"),(0,o.kt)("li",{parentName:"ol"},"Checking that projects a conform to company standards")),(0,o.kt)("h1",{id:"planning-for-quality"},"Planning for Quality"),(0,o.kt)("p",null,"A Project Quality Plan - sets the bar for the team to achieve\nKey Sections of a quality plan document for a project"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Product Introduction")," - intended market"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Product Plans")," - critical release dates, maintenance etc"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Process Description")," - what process will be followed for this project"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Quality Goals")," - Critical quality attributes for final product"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Risks and Risk Management")," - expected key risk areas.")),(0,o.kt)("p",null,"Identifying standards that will be met\nRecommended quality promoting processes for the project\nMake sure everyone knows what the target quality is\nAim of the QA Team: improve the process between projects, documenting what worked well, apply successful processes to other projects"),(0,o.kt)("h1",{id:"defining-quality"},"Defining Quality"),(0,o.kt)("p",null,"Product standards - documentation standards, coding conventions etc\nProcess Standards - when reviews, testing etc is done\nISO created for specific standards"),(0,o.kt)("h2",{id:"quality-driven-culture"},"Quality-Driven Culture"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Risk is that the Quality Assurance Team become the nasty people that make you have to do unnecessary work"),(0,o.kt)("li",{parentName:"ul"},"Its good to get teams to be in charge of what excellence is for them"),(0,o.kt)("li",{parentName:"ul"},"Invest in tools which makes it easier, helps them faster not slow them down")),(0,o.kt)("h1",{id:"checking-for-quality---inspections"},"Checking for Quality - Inspections"),(0,o.kt)("p",null,"Inspections during coding process.\nFagen (1986) - Estimated that 60%+ of bugs can be found by inspecting code\nProwell (1999) - Claims they found more than 90% of defects"),(0,o.kt)("h2",{id:"traditional-inspections"},"Traditional Inspections"),(0,o.kt)("p",null,"3-7 people examine a concrete SE output. Takes around 2 hours\nFocus on:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"finding problems and non-conformance to standards"),(0,o.kt)("li",{parentName:"ul"},"checking for completeness or missing logical steps"),(0,o.kt)("li",{parentName:"ul"},"do code segments, diagrams, tests, reqs, specs")),(0,o.kt)("p",null,"Need to make sure documentation is produced - evidence of quality for client acceptance"),(0,o.kt)("h2",{id:"qa-reviews-and-inspections"},"QA Reviews and Inspections"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"People independently examine the document in advance and are familiar with it. "),(0,o.kt)("li",{parentName:"ul"},"Review should take place"),(0,o.kt)("li",{parentName:"ul"},"Output is a list of problems that need fixing")),(0,o.kt)("h2",{id:"common-inspection-problems"},"Common Inspection Problems"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Criticising the people who built the document"),(0,o.kt)("li",{parentName:"ul"},"People worry that their performance will be judged"),(0,o.kt)("li",{parentName:"ul"},"People dont properly prepare before the inspection. Need to ensure they read the document first"),(0,o.kt)("li",{parentName:"ul"},"People try to discuss every problem as they find it")),(0,o.kt)("p",null,"Traditional inspections are important and common but Paired Programming is more agile inspection for coding."),(0,o.kt)("h2",{id:"retrospectives-vs-postmortems"},"Retrospectives vs Postmortems"),(0,o.kt)("p",null,"Both a form of review/inspection"),(0,o.kt)("h3",{id:"agile-retrospectives"},"Agile Retrospectives"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"After each sprint"),(0,o.kt)("li",{parentName:"ul"},"Dev team reflects on progress, good and bad things that happened"),(0,o.kt)("li",{parentName:"ul"},"See if they can improve/optimise/try anything"),(0,o.kt)("li",{parentName:"ul"},"FEEDS INTO: next round of dev on same project")),(0,o.kt)("h3",{id:"agile-postmortems"},"Agile Postmortems"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"End of project review - focus on issues experienced"),(0,o.kt)("li",{parentName:"ul"},"Considered hard to do without blaming/being negative"),(0,o.kt)("li",{parentName:"ul"},"Looks for Root-Causes"),(0,o.kt)("li",{parentName:"ul"},"More likely to be led by QA team, with Devs"),(0,o.kt)("li",{parentName:"ul"},"FEEDS INTO: QA process improvement for future projects")),(0,o.kt)("h1",{id:"checking-for-quality---measures"},"Checking for Quality - Measures"),(0,o.kt)("p",null,"QA Team help to define how to answer questions in a way that is corporately acceptable/agreeable."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"7344834cb958baf4be4b0d0abdafac85.png",src:n(140).Z,width:"1355",height:"307"}),"\nThese non-functional aspects that often define quality. Hard to measure and conflict."),(0,o.kt)("h2",{id:"things-you-can-measure"},"Things you can measure"),(0,o.kt)("p",null,"Some of these subjective measures of quality can be indirectly inferred from objective metrics\n",(0,o.kt)("strong",{parentName:"p"},"Code/Predictor Measures"),": Number of lines/ the Fog Index(readability of comments)\n",(0,o.kt)("strong",{parentName:"p"},"Control/Process Measures"),": Number of reported faults reported after delivery/ number of person days for coding"),(0,o.kt)("h2",{id:"measure-types"},"Measure types"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code/Predictor Measures"),": Help you to judge aspects of code quality, but are only predictors of quality\n",(0,o.kt)("strong",{parentName:"p"},"Control/Process Measures"),": Measuring the success of your SE process. Help decided whether to improve the processes later"),(0,o.kt)("p",null,"Can only make limited assumptions about code measures, depends on language aswell. Metrics can only be used as predictors"))}d.isMDXComponent=!0},140:function(e,t,n){t.Z=n.p+"assets/images/7344834cb958baf4be4b0d0abdafac85-7e08d45953b433d6c5428a07e48d264d.png"}}]);