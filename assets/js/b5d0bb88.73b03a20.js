"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[7839],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>d});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=r.createContext({}),p=function(e){var a=r.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},m=function(e){var a=p(e.components);return r.createElement(o.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=n,g=u["".concat(o,".").concat(d)]||u[d]||c[d]||i;return t?r.createElement(g,l(l({ref:a},m),{},{components:t})):r.createElement(g,l({ref:a},m))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=u;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},54917:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(87462),n=(t(67294),t(3905));const i={},l=void 0,s={unversionedId:"Year1/Programming Paradigms/Java/22.02.18 - Inheritance and Class Diagrams",id:"Year1/Programming Paradigms/Java/22.02.18 - Inheritance and Class Diagrams",title:"22.02.18 - Inheritance and Class Diagrams",description:"Can use inheritance/sub type polymorphism for re-use and adaptation",source:"@site/docs/Year1/1009 - Programming Paradigms/Java/22.02.18 - Inheritance and Class Diagrams.md",sourceDirName:"Year1/1009 - Programming Paradigms/Java",slug:"/Year1/Programming Paradigms/Java/22.02.18 - Inheritance and Class Diagrams",permalink:"/Year1/Programming Paradigms/Java/22.02.18 - Inheritance and Class Diagrams",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"Constructors",permalink:"/Year1/Programming Paradigms/Java/22.02.17 - Aggregation"},next:{title:"Class Diagrams",permalink:"/Year1/Programming Paradigms/Java/22.02.24 - Class Diagrams & Exceptions"}},o={},p=[{value:"Polymorphism",id:"polymorphism",level:2},{value:"Parametric Polymorphism:",id:"parametric-polymorphism",level:3},{value:"Ad-hoc polymorphism (function overloading)",id:"ad-hoc-polymorphism-function-overloading",level:3},{value:"Sub-type polymorphism (sub classing)",id:"sub-type-polymorphism-sub-classing",level:3}],m={toc:p};function c(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Can use inheritance/sub type polymorphism for re-use and adaptation\nInheritance is one of the most important ideas in the object oriented paradigm. - Underpins many other things"),(0,n.kt)("h1",{id:"inheritance-sub-classing"},"Inheritance: Sub-classing"),(0,n.kt)("p",null,"Inheritance: IS-A relationships. "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A class can be a specialisation of another class"),(0,n.kt)("li",{parentName:"ul"},"Use ",(0,n.kt)("inlineCode",{parentName:"li"},"extends")," to get inheritance. ",(0,n.kt)("em",{parentName:"li"},"bear")," 'IS-AN' ",(0,n.kt)("em",{parentName:"li"},"Animal"),", so it gets everything in ",(0,n.kt)("em",{parentName:"li"},"Animal")," and can change it or add to it")),(0,n.kt)("h2",{id:"polymorphism"},"Polymorphism"),(0,n.kt)("p",null,"Means many forms - not fixed to specific types"),(0,n.kt)("h3",{id:"parametric-polymorphism"},"Parametric Polymorphism:"),(0,n.kt)("p",null,"Code works with multiple types, or regardless of types"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"What functional programmers mean"),(0,n.kt)("li",{parentName:"ul"},"Java generics")),(0,n.kt)("h3",{id:"ad-hoc-polymorphism-function-overloading"},"Ad-hoc polymorphism (function overloading)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Same function name, multiple versions differing by parameter types"),(0,n.kt)("li",{parentName:"ul"},"Function may work differently depending upon the type")),(0,n.kt)("h3",{id:"sub-type-polymorphism-sub-classing"},"Sub-type polymorphism (sub classing)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Usually what is meant by polymorphism in OO terms"),(0,n.kt)("li",{parentName:"ul"},"Often called inheritance or sub-classing"),(0,n.kt)("li",{parentName:"ul"},"Super-class/base class = Original class"),(0,n.kt)("li",{parentName:"ul"},"Sub-class/derived class = New type")),(0,n.kt)("h1",{id:"public-private-protected"},"Public, Private, Protected"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"private")," - Only this class can access this"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"nothing"),"(package) - This class + this package can access this"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"protected")," - The class + this package + sub-classes can access this"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"public")," - Anything can access this")))}c.isMDXComponent=!0}}]);