"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[575],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),f=a,d=p["".concat(c,".").concat(f)]||p[f]||m[f]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9113:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={},c="Iterator Pattern",s={unversionedId:"Year1/Programming Paradigms/Java/22.03.18 - Iterator Pattern",id:"Year1/Programming Paradigms/Java/22.03.18 - Iterator Pattern",title:"Iterator Pattern",description:"- Method to move through (iterate through) the elements of something",source:"@site/docs/Year1/1009 - Programming Paradigms/Java/22.03.18 - Iterator Pattern.md",sourceDirName:"Year1/1009 - Programming Paradigms/Java",slug:"/Year1/Programming Paradigms/Java/22.03.18 - Iterator Pattern",permalink:"/notes/docs/Year1/Programming Paradigms/Java/22.03.18 - Iterator Pattern",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"22.03.17 - Parametric Polymorphism and Boxing",permalink:"/notes/docs/Year1/Programming Paradigms/Java/22.03.17 - Parametric Polymorphism and Boxing"},next:{title:"Alternatives to Inner Classes",permalink:"/notes/docs/Year1/Programming Paradigms/Java/22.03.25 - Anonymous Classes"}},u={},m=[{value:"Java support for Iterator and Iterable",id:"java-support-for-iterator-and-iterable",level:2},{value:"Two interfaces to know",id:"two-interfaces-to-know",level:2}],p={toc:m};function f(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"iterator-pattern"},"Iterator Pattern"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Method to move through (iterate through) the elements of something"),(0,o.kt)("li",{parentName:"ul"},"Retrieve an iterator, which remembers its position and allows you to move to the next element"),(0,o.kt)("li",{parentName:"ul"},"Retrieve/create an iterator, which remembers its position and allows you to move to the next element")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"eacc8f14059762efcd0d99ef9b6b09dd.png",src:r(7590).Z,width:"725",height:"288"})),(0,o.kt)("h2",{id:"java-support-for-iterator-and-iterable"},"Java support for Iterator and Iterable"),(0,o.kt)("p",null,"Iterator interface exists. For each loops can be used with them - simplified version"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public interface Iterator<T>{\n    boolean hasNext();\n    T next();\n}\n")),(0,o.kt)("p",null,"Iterable interface also exists, to create an Iterator. "),(0,o.kt)("h2",{id:"two-interfaces-to-know"},"Two interfaces to know"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Iterable (on the container to iterate through). Interface with a method to create an iterator"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Iterator <T> iterator()")),(0,o.kt)("li",{parentName:"ul"},"Iterator (object to do the iteration). Interface to allow checking if there is a next object and if so retrieving it and moving on"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"boolean hasNext() \\n T next()"))))}f.isMDXComponent=!0},7590:function(e,t,r){t.Z=r.p+"assets/images/eacc8f14059762efcd0d99ef9b6b09dd-ed3dd763f82e46056c1a0a93427ab3a7.png"}}]);