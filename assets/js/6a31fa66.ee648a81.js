"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[9606],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),u=i,h=d["".concat(o,".").concat(u)]||d[u]||m[u]||s;return a?n.createElement(h,r(r({ref:t},p),{},{components:a})):n.createElement(h,r({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=a.length,r=new Array(s);r[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<s;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8032:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const s={},r="18. Revision",l={unversionedId:"Year2/2013/18",id:"Year2/2013/18",title:"18. Revision",description:"Introduction",source:"@site/docs/Year2/2013/18.md",sourceDirName:"Year2/2013",slug:"/Year2/2013/18",permalink:"/Year2/2013/18",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year2",previous:{title:"17. Open Source Software",permalink:"/Year2/2013/17"},next:{title:"Year in Industry",permalink:"/Year2/Misc/Industry"}},o={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Basic Concepts",id:"basic-concepts",level:2},{value:"Java Collections Framework",id:"java-collections-framework",level:2},{value:"Implementation of OOP concepts in Java",id:"implementation-of-oop-concepts-in-java",level:2},{value:"UML",id:"uml",level:2},{value:"Object Oriented Analysis",id:"object-oriented-analysis",level:2},{value:"Object Oriented Design",id:"object-oriented-design",level:2},{value:"Activity Diagrams",id:"activity-diagrams",level:3},{value:"Sequence Diagrams",id:"sequence-diagrams",level:3},{value:"State Machine Diagrams",id:"state-machine-diagrams",level:3},{value:"Class Diagram",id:"class-diagram",level:3},{value:"Multiplicity Indicators",id:"multiplicity-indicators",level:3},{value:"Relationships",id:"relationships",level:3},{value:"Association",id:"association",level:5},{value:"Aggregation (<em>is part of</em> relationship)",id:"aggregation-is-part-of-relationship",level:4},{value:"Composition",id:"composition",level:4},{value:"Realisation",id:"realisation",level:4},{value:"Generalisation",id:"generalisation",level:4}],p={toc:c};function m(e){let{components:t,...s}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"18-revision"},"18. Revision"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Core attributes of maintainable software "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Readable code"),(0,i.kt)("li",{parentName:"ul"},"Strong documentation"),(0,i.kt)("li",{parentName:"ul"},"Consistent variable/functions conventions"),(0,i.kt)("li",{parentName:"ul"},"Standard code layout"),(0,i.kt)("li",{parentName:"ul"},"Testability")),(0,i.kt)("p",null,"Main principles for developing software"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Maintainability benefits most from adhearing to simple guidelines"),(0,i.kt)("li",{parentName:"ul"},"Maintainability is not an afterthought should be addressed from the very beginning of a development project"),(0,i.kt)("li",{parentName:"ul"},"Some violation are worse than others; the more a software system compiles with the guidelines for more maintainable it is")),(0,i.kt)("p",null,"Software maintenance involves - The process for managing and executing software maintenance activities is described. Also need to consider how we can reduce the effort of maintenance"),(0,i.kt)("p",null,"Main Categories"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Corrective maintenance")," - Finding and fixing errors in the system"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Adaptive Maintenance")," - The system has to be adapted to change in the environment in which it operates"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Perfective + Preventive Maintenance")," - Users of the system have new or changed requirements. Ways identified to increase the quality or prevent future bugs.")),(0,i.kt)("h2",{id:"basic-concepts"},"Basic Concepts"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Abstraction")," - Simple things like objects represent more complex underlying code and data",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Cannot be used to instantiate objects but references to abstract classes are legal."),(0,i.kt)("li",{parentName:"ul"},"Classes can have instance methods that implement a default behaviour. May contain non-final variables"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Encapsulation")," - Ability to protect some components of the object from external access. ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Making public variables private"),(0,i.kt)("li",{parentName:"ul"},"Hiding the implementation details of a class"),(0,i.kt)("li",{parentName:"ul"},"Helps with program maintenance (doesn't affect other classes)"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Inheritance")," - Ability for a class to extend or override functionality of another class"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Polymorphism")," - The provision of a single interface to entities of different types. ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Compile time - Method overloading - Same name co-exists in the same class but they must have different method signatures"),(0,i.kt)("li",{parentName:"ul"},"Run time - Method overriding - Same name is declared in super and sub class"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"this")," - Refers to the implicit parameter inside the class"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Constructors")," - Invoked using the ",(0,i.kt)("inlineCode",{parentName:"li"},"new")," operator"),(0,i.kt)("li",{parentName:"ul"},"Passing Data - Can either pass by value or pass by reference"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Overloaded Methods")," - Methods of the same class that have the same name but different numbers/types. Compiler will treat them as completely different methods"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Static Field")," - Shared by all objects of the class. Normally stored with the class code. Not initialised in constructors."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Non-Static Field")," - Belongs to an individual object"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Static Methods")," - Access and manipulate class statics fields. Belongs to the class, not an instance of it. Cannot access instance fields or call methods of the class."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Instance Methods")," - Can access all fields and call all methods of their class (Static and non-static).")),(0,i.kt)("h2",{id:"java-collections-framework"},"Java Collections Framework"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Collection is an object that represents a group of objects. This contains data structures and algorithmic operations"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Collection")," - Something that holds a dynamic collection of objects"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Map")," - Defines mapping between keys and objects"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Iterable")," - Collections are able to return an iterator object that can scan over the contents of a collection one object at a time"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Queue")," - Represents FIFO queues and LIFO stacks"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Deque")," - Represents a double ended queue"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Set")," - A collection that cannot contain duplicate elements"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"List")," - An ordered sequence of elements that allows duplicate elements"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Typesafe collection with 'Generics'")," - Classes support generics by allowing a type variable to be included in their declaration; type are declared for the reference and constructor. Cannot type a collection using a primitive type"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"TreeSet Class")," - Provides an implementation of the set interface that uses a tree for storage (ascending order)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"HashMap Class")," - Hash table implementation of the map interface. The implementation provides all of the optional map operations, and permits null values and the null key")),(0,i.kt)("h2",{id:"implementation-of-oop-concepts-in-java"},"Implementation of OOP concepts in Java"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Aggregation")," - Object of class B is ",(0,i.kt)("strong",{parentName:"p"},"part of")," an object of class A but the object of class B can be shared and if the object of class A is deleted, class B is not deleted\n",(0,i.kt)("img",{src:a(6089).Z,width:"495",height:"135"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Composition")," - An object of class A ",(0,i.kt)("strong",{parentName:"p"},"owns")," an object of class B and the object of class B cannot be shared and if the object of class A is deleted, the object of class B is also deleted\n",(0,i.kt)("img",{src:a(1491).Z,width:"603",height:"135"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Inheritance")," - Forming new classes based on existing ones. (is-a relationship)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"superclass")," - parent class being extended"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"subclass")," - child class that inherits behaviour from the parent class")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Interfaces")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Methods are implicitly abstract, cannot have implementations but rather are implemented. Is an abstract type that is used to describe a behaviour that classes must implement. Implements an interface must implement all of the non-default methods describe in the interface. Less restrictive when it comes to inheritance ")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/Year2/2013/03#java_versions"},"Java Changes")),(0,i.kt)("h2",{id:"uml"},"UML"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"A specification defining a graphical language for visualising, specifying, constructing and documenting the artefacts of distributed object systems")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Advantages")," - Enhances communication and ensures the right communication. Captures logical software independent. Helps to manage the complexity. Enables reuse of design"),(0,i.kt)("h2",{id:"object-oriented-analysis"},"Object Oriented Analysis"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Use Case Diagrams")," - Set of actions that some system(s) should or can perform in collaboration with one or more external users of the system or systems"),(0,i.kt)("h2",{id:"object-oriented-design"},"Object Oriented Design"),(0,i.kt)("h3",{id:"activity-diagrams"},"Activity Diagrams"),(0,i.kt)("p",null,"Graphical representations of workflows of step wise activities and actions related to an individual use case or across many use cases. Supports representation of parallel behaviour\n",(0,i.kt)("img",{src:a(8824).Z,width:"643",height:"702"})),(0,i.kt)("h3",{id:"sequence-diagrams"},"Sequence Diagrams"),(0,i.kt)("p",null,"Temporal representation of objects and their interactions\n",(0,i.kt)("img",{src:a(4757).Z,width:"902",height:"439"})),(0,i.kt)("h3",{id:"state-machine-diagrams"},"State Machine Diagrams"),(0,i.kt)("p",null,"Show the possible states of a single object. Only reactive objects require a state machine diagram\n",(0,i.kt)("img",{src:a(6397).Z,width:"1205",height:"762"})),(0,i.kt)("h3",{id:"class-diagram"},"Class Diagram"),(0,i.kt)("p",null,"Shows the existence of classes and their structures and relationship in the logical view of a system"),(0,i.kt)("p",null,"Depicted as rectangles with three compartments; class name, attributes(), operations "),(0,i.kt)("p",null,"Associations between classes - Associated if an instance of a class A (source) has to know about an instance of class B (target class)"),(0,i.kt)("h3",{id:"multiplicity-indicators"},"Multiplicity Indicators"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"1"),(0,i.kt)("td",{parentName:"tr",align:null},"exactly 1")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"*"),(0,i.kt)("td",{parentName:"tr",align:null},"unlimited number (zero or more)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"0..*"),(0,i.kt)("td",{parentName:"tr",align:null},"zero or more")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"1..*"),(0,i.kt)("td",{parentName:"tr",align:null},"one or more")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"0..1"),(0,i.kt)("td",{parentName:"tr",align:null},"zero or 1")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"3..7"),(0,i.kt)("td",{parentName:"tr",align:null},"specified range (3-7)")))),(0,i.kt)("h3",{id:"relationships"},"Relationships"),(0,i.kt)("h5",{id:"association"},"Association"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Reference based relationship between two classes")),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(9806).Z,width:"1407",height:"344"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Dependency")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Created when you receive a reference to a class as part of a particular method")),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(2259).Z,width:"1532",height:"344"})),(0,i.kt)("h4",{id:"aggregation-is-part-of-relationship"},"Aggregation (",(0,i.kt)("em",{parentName:"h4"},"is part of")," relationship)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Same as association and often seen as redundant relationship. Used when an object logically pr physically contains other; the container is called 'aggregate'; the components of the aggregate can be shared with others")),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(3888).Z,width:"1419",height:"378"})),(0,i.kt)("h4",{id:"composition"},"Composition"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Relates to instance recreational responsibility "),(0,i.kt)("li",{parentName:"ul"},"When class B is composed by class A, class A instance owns the creation of controls lifetime of instance of class B")),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(138).Z,width:"1456",height:"301"})),(0,i.kt)("h4",{id:"realisation"},"Realisation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Specialised abstraction relationship between two sets of model elements, one representing a specification (the supplier) and the other representing an implementation (the client) of the specification")),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(8094).Z,width:"1456",height:"169"})),(0,i.kt)("h4",{id:"generalisation"},"Generalisation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Directed relationship between a more general classifier (subclass) and a more specific classifier (subclass)")))}m.isMDXComponent=!0},6089:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221010172148-3a14c5b16e80e0237192eed2e6b91441.png"},1491:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221010172329-6c055760c8cf30cbf51c70e0e8c0cefb.png"},8824:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017171225-9f086db09b7a5d0e05f2414faabb99bc.png"},4757:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017171401-e3b242660fe78b7c512c0f2d09837123.png"},6397:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017171431-7102780534168f8eba0b70e79f578208.png"},9806:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017174533-5244ecf1215361ee101b07f8c1056b26.png"},2259:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017174550-9fd1695874e753b2e17290207444cdf9.png"},3888:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017174611-00dd57d7f1a23a447f1ad87dc8278b11.png"},138:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017174630-91494d5124e26879d54d898d52b35cdc.png"},8094:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/20221017174837-c9bd2b624e6a670638500828d0841863.png"}}]);