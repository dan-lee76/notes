"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[9683],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(g,i(i({ref:t},u),{},{components:n})):a.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7707:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={},c=void 0,l={unversionedId:"Year1/Programming Paradigms/Java/22.02.04 - Java and C, using Objects",id:"Year1/Programming Paradigms/Java/22.02.04 - Java and C, using Objects",title:"22.02.04 - Java and C, using Objects",description:"String Class - const char *",source:"@site/docs/Year1/1009 - Programming Paradigms/Java/22.02.04 - Java and C, using Objects.md",sourceDirName:"Year1/1009 - Programming Paradigms/Java",slug:"/Year1/Programming Paradigms/Java/22.02.04 - Java and C, using Objects",permalink:"/docs/Year1/Programming Paradigms/Java/22.02.04 - Java and C, using Objects",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction to objects and Java",permalink:"/docs/Year1/Programming Paradigms/Java/22.02.03 - Introduction to objects and Java"},next:{title:"22.02.10 - Introduction to Objected Oriented Desig",permalink:"/docs/Year1/Programming Paradigms/Java/22.02.10 - Introduction to Objected Oriented Desig"}},u={},p=[{value:"Java Conventions",id:"java-conventions",level:2},{value:"Data types in Java",id:"data-types-in-java",level:2},{value:"Objects",id:"objects",level:3},{value:"String",id:"string",level:3},{value:"Auto-boxing and unboxing",id:"auto-boxing-and-unboxing",level:3},{value:"Java command line args",id:"java-command-line-args",level:2},{value:"Applying Functions",id:"applying-functions",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"String Class - const char *\nString Buffer class - const char"),(0,o.kt)("p",null,"Do not create any static methods apart from main\nCan create other static methods in a class"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Methods can call other static methods"),(0,o.kt)("li",{parentName:"ul"},"Can pass parameters"),(0,o.kt)("li",{parentName:"ul"},"Like global functions\nUsing static methods, the code is not being executed on a specific object, so not really object oriented")),(0,o.kt)("h2",{id:"java-conventions"},"Java Conventions"),(0,o.kt)("p",null,"Use capital first letter for class names\nUse lower case first letter for variable names and method/function names\nWith multiple words, capitalise the first letter of subsequent words"),(0,o.kt)("h2",{id:"data-types-in-java"},"Data types in Java"),(0,o.kt)("p",null,"'char' in Java is a 2 byte number to allow for extended character sets"),(0,o.kt)("h3",{id:"objects"},"Objects"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use object references to refer to object"),(0,o.kt)("li",{parentName:"ul"},"Object references act like C struct pointers"),(0,o.kt)("li",{parentName:"ul"},"Need to use new to create the object"),(0,o.kt)("li",{parentName:"ul"},"Assigning one reference to another means 'make it refer to the same object'"),(0,o.kt)("li",{parentName:"ul"},"Passing an object reference into a function, or returning one, means referring to the same object, NOT creating a new one.")),(0,o.kt)("h3",{id:"string"},"String"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Do not need to create them"),(0,o.kt)("li",{parentName:"ul"},"using + operator with ",(0,o.kt)("inlineCode",{parentName:"li"},"String")," objects create a new ",(0,o.kt)("inlineCode",{parentName:"li"},"String")," - without new"),(0,o.kt)("li",{parentName:"ul"},"Passed around like objects"),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"StringBuffer")," object if need to change a strings contents")),(0,o.kt)("h3",{id:"auto-boxing-and-unboxing"},"Auto-boxing and unboxing"),(0,o.kt)("p",null,"Classes to wrap each of the basic data types\nCan sometimes treat basic types as if they are objects"),(0,o.kt)("h2",{id:"java-command-line-args"},"Java command line args"),(0,o.kt)("p",null,"use ",(0,o.kt)("inlineCode",{parentName:"p"},".length")," to find the length\nArray of commands inside args\nThere is no filename as the first argument "),(0,o.kt)("h2",{id:"applying-functions"},"Applying Functions"),(0,o.kt)("p",null,"Expressed as ",(0,o.kt)("inlineCode",{parentName:"p"},"object,function()"),"\nMeans apply the function on the object and pass the parameters"))}m.isMDXComponent=!0}}]);