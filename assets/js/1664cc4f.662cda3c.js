"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[3552],{3905:(n,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>u});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var s=r.createContext({}),i=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},c=function(n){var e=i(n.components);return r.createElement(s.Provider,{value:e},n.children)},f={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},b=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,s=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),b=i(t),u=a,x=b["".concat(s,".").concat(u)]||b[u]||f[u]||o;return t?r.createElement(x,p(p({ref:e},c),{},{components:t})):r.createElement(x,p({ref:e},c))}));function u(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,p=new Array(o);p[0]=b;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l.mdxType="string"==typeof n?n:a,p[1]=l;for(var i=2;i<o;i++)p[i]=t[i];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},6390:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>p,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var r=t(7462),a=(t(7294),t(3905));const o={},p="7. The Booleans",l={unversionedId:"Year2/2009/07",id:"Year2/2009/07",title:"7. The Booleans",description:"",source:"@site/docs/Year2/2009/07.md",sourceDirName:"Year2/2009",slug:"/Year2/2009/07",permalink:"/Year2/2009/07",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year2",previous:{title:"6. Predicate Logic (2)",permalink:"/Year2/2009/06"},next:{title:"8. Booleans (2)",permalink:"/Year2/2009/08"}},s={},i=[],c={toc:i};function f(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"7-the-booleans"},"7. The Booleans"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean"},"variable P : Prop\nvariables A B : Type\nvariable R : A \u2192 B \u2192 Prop\nvariable PP : A \u2192 Prop\nvariable QQ : A \u2192 Prop\n\nopen classical\n\ntheorem raa : \xac \xac P \u2192 P := \nbegin\n  assume nnp,\n  cases (em P) with p np,\n    exact p,\n    have f : false,\n      apply nnp,\n      exact np,\n    cases f,\nend\n\nexample : \xac (\u2203 x : A, PP x) \u2194 (\u2200 x : A, \xacPP x) :=\nbegin\n  constructor,\n  assume h a ppa,\n  apply h,\n  existsi a,\n  exact ppa,\n\n  assume nppx eppx,\n  cases eppx with x ppx,\n  apply nppx,\n  exact ppx,\nend\n\nexample : \xac(\u2200 x : A, PP x) \u2194 \u2203 x : A, \xac PP x :=\nbegin\n  constructor,\n  assume h,\n  apply raa,\n  assume ppx,\n  apply h,\n  assume x,\n  apply raa,\n  assume nppa,\n  apply ppx,\n  existsi x,\n  exact nppa,\n\n  assume h hh,\n  cases h with a nppa,\n  apply nppa,\n  apply hh,\nend\n\n/- \nbool = True\nbool = {tt , ff}\n-/\n\nnamespace bool\n\n/-\nInductive bool : Type\n| tt : bool\n| ff : bool\n\ntt and ff are the only elements of bool. \n\u2200 x : bool, x=tt \u2228 x=ff\n\n-/\n\nexample : \u2200 x : bool, x=tt \u2228 x=ff :=\nbegin\n  assume x,\n  cases x,\n  right,\n  reflexivity,\n  left,\n  reflexivity,\nend\n\nexample : tt \u2260 ff :=\nbegin\n  assume h,\n  contradiction,\nend\n\n\ndef bnot : bool \u2192 bool\n  | tt := ff\n  | ff := tt\n\n#eval bnot (bnot tt)\nexample : \u2200 x:bool, bnot (bnot x) = x :=\nbegin\n  assume x,\n  cases x,\n  -- dsimp [bnot],\n  reflexivity,\n\n  -- dsimp [bnot],\n  reflexivity,\nend\n\n/-\ndef band : bool \u2192 bool \u2192 bool\n  | ff ff := ff\n  | ff tt := ff\n  | tt ff := ff\n  | tt tt := tt\n-/\n\ndef band : bool \u2192 bool \u2192 bool\n  | tt x := x\n  | ff x := ff\n\ndef bor : bool \u2192 bool \u2192 bool \n  | tt x := tt\n  | ff x := x\n\n\nend bool\n")))}f.isMDXComponent=!0}}]);