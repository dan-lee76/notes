"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[1970],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(t),h=o,g=p["".concat(c,".").concat(h)]||p[h]||u[h]||a;return t?r.createElement(g,i(i({ref:n},d),{},{components:t})):r.createElement(g,i({ref:n},d))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},93:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(87462),o=(t(67294),t(3905));const a={},i="22.03.15 - Advanced Version Control",l={unversionedId:"Year1/Software Engineer/22.03.15 - Advanced Version Control",id:"Year1/Software Engineer/22.03.15 - Advanced Version Control",title:"22.03.15 - Advanced Version Control",description:"Branches",source:"@site/docs/Year1/1003 - Software Engineer/22.03.15 - Advanced Version Control.md",sourceDirName:"Year1/1003 - Software Engineer",slug:"/Year1/Software Engineer/22.03.15 - Advanced Version Control",permalink:"/Year1/Software Engineer/22.03.15 - Advanced Version Control",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"22.03.14 - Config Development",permalink:"/Year1/Software Engineer/22.03.14 - Config_Development"},next:{title:"22.03.21 - Evolution Maintenance",permalink:"/Year1/Software Engineer/22.03.21 - Evolution_Maintenance"}},c={},s=[{value:"Branches",id:"branches",level:2},{value:"Merging",id:"merging",level:3},{value:"Problems switching",id:"problems-switching",level:2},{value:"Collaborating over branches",id:"collaborating-over-branches",level:2},{value:"Asking to Merger",id:"asking-to-merger",level:2},{value:"Workflows",id:"workflows",level:2}],d={toc:s};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"220315---advanced-version-control"},"22.03.15 - Advanced Version Control"),(0,o.kt)("h2",{id:"branches"},"Branches"),(0,o.kt)("p",null,"Designed to 'let you branch off' and work on something. So your not on the main code\nCreates a copy of the code you branched from\nCan make git folder show any branch "),(0,o.kt)("h3",{id:"merging"},"Merging"),(0,o.kt)("p",null,"Want to tell your dev manager that your code is ready\nThey will be the ones who merge it into your code. Bit like approving/adopting your code"),(0,o.kt)("h2",{id:"problems-switching"},"Problems switching"),(0,o.kt)("p",null,"Option 0 - everything is fully committed, so no problems. Changes the files you are looking at only\nOption 1 - Carry your edited-but-not-added files with you. Only changes the files your looking at.\nOption 2 - Stash stores current working files for later use without committing them\nOption 3 - Go somewhere completely different on computer"),(0,o.kt)("h2",{id:"collaborating-over-branches"},"Collaborating over branches"),(0,o.kt)("p",null,"Need to push and pull for the branches to be created. Can track between branches on a server and specific branches on versions"),(0,o.kt)("p",null,"If wanting to work on remote branch would need to do\n",(0,o.kt)("inlineCode",{parentName:"p"},"git checkout --track origin/name"),"\nTo let others work on the branch would do\n",(0,o.kt)("inlineCode",{parentName:"p"},"git push -u origin name")),(0,o.kt)("h2",{id:"asking-to-merger"},"Asking to Merger"),(0,o.kt)("p",null,"Important branches are protected, so they cant be accessed. Only some people have the ability.\nTo do merger request, need to do it in the user interface. Shows the owner of the protected branch the code and then they approve it.\nOnce its merged, the branch gets deleted"),(0,o.kt)("h2",{id:"workflows"},"Workflows"),(0,o.kt)("p",null,"Any issue created, create a new branch. Pull branch down,, write code then commit/push to that branch. The merger and resolve the issue\nCode review is considered important by everyone. Set it up so the code gets reviewed by someone, and they are the ones who can merge it"))}u.isMDXComponent=!0}}]);