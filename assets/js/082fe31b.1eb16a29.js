"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[7238],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),u=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,k=d["".concat(o,".").concat(m)]||d[m]||p[m]||r;return n?i.createElement(k,l(l({ref:t},c),{},{components:n})):i.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},22229:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var i=n(87462),a=(n(67294),n(3905));const r={},l="Unix and Linux",s={unversionedId:"Year3/3006/08",id:"Year3/3006/08",title:"Unix and Linux",description:"Authentication",source:"@site/docs/Year3/3006/08.md",sourceDirName:"Year3/3006",slug:"/Year3/3006/08",permalink:"/Year3/3006/08",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year3",previous:{title:"Malware",permalink:"/Year3/3006/07"},next:{title:"Exploits",permalink:"/Year3/3006/09"}},o={},u=[{value:"Authentication",id:"authentication",level:2},{value:"Principals vs. Subjects",id:"principals-vs-subjects",level:2},{value:"Objects",id:"objects",level:2},{value:"General Model",id:"general-model",level:2},{value:"Ownership",id:"ownership",level:2},{value:"Unix",id:"unix",level:2},{value:"Groups",id:"groups",level:2},{value:"UID/GID",id:"uidgid",level:2},{value:"Shadow File",id:"shadow-file",level:2},{value:"All things <code>Root</code>",id:"all-things-root",level:2},{value:"Inodes",id:"inodes",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Octal",id:"octal",level:2},{value:"Directories",id:"directories",level:2},{value:"SUID",id:"suid",level:2},{value:"Linux Security Modules",id:"linux-security-modules",level:2},{value:"SELinux",id:"selinux",level:2},{value:"AppArmor",id:"apparmor",level:2}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"unix-and-linux"},"Unix and Linux"),(0,a.kt)("h2",{id:"authentication"},"Authentication"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Lets us verify who we are to a system"),(0,a.kt)("li",{parentName:"ul"},"Need a mechanism to enforce access control"),(0,a.kt)("li",{parentName:"ul"},"Subject/Principal - an active entity"),(0,a.kt)("li",{parentName:"ul"},"Object - resource being accessed"),(0,a.kt)("li",{parentName:"ul"},"Access operation"),(0,a.kt)("li",{parentName:"ul"},"Reference Monitor - grants or denies access")),(0,a.kt)("h2",{id:"principals-vs-subjects"},"Principals vs. Subjects"),(0,a.kt)("p",null,"Principal"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"An entity that can be granted access to objects or can make statements affecting access control decisions"),(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},"User identity in an OS"),(0,a.kt)("li",{parentName:"ul"},"Used when discussing security policies\nSubject\nAn active entity within an IT system"),(0,a.kt)("li",{parentName:"ul"},"Process running under a user identitity"),(0,a.kt)("li",{parentName:"ul"},"Used when discussing operational systems and enforcing policies"))),(0,a.kt)("h2",{id:"objects"},"Objects"),(0,a.kt)("p",null,"Files or resources - Memory, printers, directories\nTwo options for focusing control:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"What a subject is allowed to do"),(0,a.kt)("li",{parentName:"ul"},"What may be done to an object\nUnix"),(0,a.kt)("li",{parentName:"ul"},"In Unix, everything is a file"),(0,a.kt)("li",{parentName:"ul"},"Files really represent resources"),(0,a.kt)("li",{parentName:"ul"},"Organised in a tree structure, with alterations depending on the file system"),(0,a.kt)("li",{parentName:"ul"},"Indoes store permissions information"),(0,a.kt)("li",{parentName:"ul"},"Every resource has an owner and group")),(0,a.kt)("h2",{id:"general-model"},"General Model"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Read")," - Simply viewing (confidentiality)\n",(0,a.kt)("inlineCode",{parentName:"p"},"Write")," - Includes changing, appending, deleting (Integrity)\n",(0,a.kt)("inlineCode",{parentName:"p"},"Execute")," - Can run a file without knowing its contents"),(0,a.kt)("h2",{id:"ownership"},"Ownership"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Discretionary")," - Owner can be defined for each resource. Owner controls who gets access\n",(0,a.kt)("strong",{parentName:"p"},"Mandatory")," - There could be a system-wide policy. Most OS support the concept of ownership"),(0,a.kt)("h2",{id:"unix"},"Unix"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Simplifies access control by considering only the owner, group and others",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"User is the current owner"),(0,a.kt)("li",{parentName:"ul"},"Group is a named group entity"),(0,a.kt)("li",{parentName:"ul"},"Everyone else"))),(0,a.kt)("li",{parentName:"ul"},"Unix offers ",(0,a.kt)("inlineCode",{parentName:"li"},"Read"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Write")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Execute")," access controls")),(0,a.kt)("h2",{id:"groups"},"Groups"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Users with similar access rights can be collected into groups"),(0,a.kt)("li",{parentName:"ul"},"Groups are given permissions to access objects\n",(0,a.kt)("img",{src:n(6162).Z,width:"614",height:"437"}))),(0,a.kt)("h2",{id:"uidgid"},"UID/GID"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Username in Unix/Linux are soft aliases, your UID is what determines permissions"),(0,a.kt)("li",{parentName:"ul"},"Stored in ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/passwd"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Stores accounts, not just passwords"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("img",{src:n(25109).Z,width:"617",height:"185"})))),(0,a.kt)("li",{parentName:"ul"},"Root has a special UID: 0 ")),(0,a.kt)("h2",{id:"shadow-file"},"Shadow File"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Store password hashes in a shadow file, only readable by root users"),(0,a.kt)("li",{parentName:"ul"},"Stores the hashed passwords needed to authenticate users")),(0,a.kt)("h2",{id:"all-things-root"},"All things ",(0,a.kt)("inlineCode",{parentName:"h2"},"Root")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Most powerful user"),(0,a.kt)("li",{parentName:"ul"},"UID is 0, actually hardcoded into the linux kernel at multiple points"),(0,a.kt)("li",{parentName:"ul"},"Write protect ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/passwd")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/group")),(0,a.kt)("li",{parentName:"ul"},"Separate superuser duties"),(0,a.kt)("li",{parentName:"ul"},"Never use root as a normal user"),(0,a.kt)("li",{parentName:"ul"},"Audit ",(0,a.kt)("inlineCode",{parentName:"li"},"su")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"sudo")," usage")),(0,a.kt)("h2",{id:"inodes"},"Inodes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Store the metadata for files"),(0,a.kt)("li",{parentName:"ul"},"Each file name links to an inode, which stores security information")),(0,a.kt)("h2",{id:"permissions"},"Permissions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Every resource has permission bits - held in the inode metadata"),(0,a.kt)("li",{parentName:"ul"},"Permissions for the user/group/others")),(0,a.kt)("h2",{id:"octal"},"Octal"),(0,a.kt)("p",null,"Octal representation (bit-wise, really)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Bit 3: read (0x4, octal/decimal)"),(0,a.kt)("li",{parentName:"ul"},"Bit 2: write (0x2, octal/decimal)"),(0,a.kt)("li",{parentName:"ul"},"Bit 1: execute (0x1, octal/decimal)"),(0,a.kt)("li",{parentName:"ul"},"Permissions are changed using ",(0,a.kt)("inlineCode",{parentName:"li"},"chmod"),", usually by passing three octal values")),(0,a.kt)("h2",{id:"directories"},"Directories"),(0,a.kt)("p",null,"Directory permissions are slightly different to files:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"r")," - List files within the directory"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"w")," - add or remove files"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"x")," - traverse directory, open files in the directory")),(0,a.kt)("h2",{id:"suid"},"SUID"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Set UID: set the effective user to be the file owner when executed"),(0,a.kt)("li",{parentName:"ul"},"Necessary to allow non-privileged access to privileged actions e.g. password"),(0,a.kt)("li",{parentName:"ul"},"Dangerous")),(0,a.kt)("h2",{id:"linux-security-modules"},"Linux Security Modules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Since 2.6, Linux provides the ability to hook into security calls"),(0,a.kt)("li",{parentName:"ul"},"Adds the ability to perform more complex Mandatory Access Control after standard Unix DAC"),(0,a.kt)("li",{parentName:"ul"},"DAC check happens irrespective of whether SM is operational")),(0,a.kt)("h2",{id:"selinux"},"SELinux"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Began as a collaboration between the NSA and Redhat - now entirely redhad"),(0,a.kt)("li",{parentName:"ul"},"Allows mandatory (centralised) access control, role-based and multi-level security"),(0,a.kt)("li",{parentName:"ul"},"Objects are processes have contexts that allow SELinux to make access control decisions"),(0,a.kt)("li",{parentName:"ul"},"Defines its own users, which are mapped to the Linux users"),(0,a.kt)("li",{parentName:"ul"},"Many users and user process map to ",(0,a.kt)("inlineCode",{parentName:"li"},"unconfined_u"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This means SELinux doesnt apply to them by default"),(0,a.kt)("li",{parentName:"ul"},"But it can, you just need a committed administrator")))),(0,a.kt)("h2",{id:"apparmor"},"AppArmor"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Installed as standard"),(0,a.kt)("li",{parentName:"ul"},"Usually used to enforce policies on services and daemons")))}p.isMDXComponent=!0},6162:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/3006_08-fbce72813c2ad690ef91a6f23c515400.png"},25109:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/3006_08_01-9198c6ea3dffb13638851997e75816f4.png"}}]);