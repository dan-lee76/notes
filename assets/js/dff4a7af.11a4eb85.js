"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[5262],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(g,i(i({ref:t},p),{},{components:a})):n.createElement(g,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3660:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const o={},i="Introduction to objects and Java",s={unversionedId:"Year1/Programming Paradigms/Java/22.02.03 - Introduction to objects and Java",id:"Year1/Programming Paradigms/Java/22.02.03 - Introduction to objects and Java",title:"Introduction to objects and Java",description:"Object Oriented Paradigm - Way you think about code and programming. Libraries for mostly everything.",source:"@site/docs/Year1/1009 - Programming Paradigms/Java/22.02.03 - Introduction to objects and Java.md",sourceDirName:"Year1/1009 - Programming Paradigms/Java",slug:"/Year1/Programming Paradigms/Java/22.02.03 - Introduction to objects and Java",permalink:"/Year1/Programming Paradigms/Java/22.02.03 - Introduction to objects and Java",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"Functional language",permalink:"/Year1/Programming Paradigms/Haskell/Revision"},next:{title:"22.02.04 - Java and C, using Objects",permalink:"/Year1/Programming Paradigms/Java/22.02.04 - Java and C, using Objects"}},l={},c=[{value:"Benefits of OO",id:"benefits-of-oo",level:2},{value:"What is an OOL",id:"what-is-an-ool",level:2},{value:"Better support for OO programming",id:"better-support-for-oo-programming",level:3},{value:"Java",id:"java",level:2},{value:"Advantages",id:"advantages",level:3},{value:"Objects and Classes",id:"objects-and-classes",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction-to-objects-and-java"},"Introduction to objects and Java"),(0,r.kt)("p",null,"Object Oriented Paradigm - Way you think about code and programming. Libraries for mostly everything.\nThink it as interacting objects which have a state and can do things"),(0,r.kt)("h2",{id:"benefits-of-oo"},"Benefits of OO"),(0,r.kt)("p",null,"Improved understanding of program structure"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Logical structure, reflecting real world"),(0,r.kt)("li",{parentName:"ul"},"Especially large programs, give useful decomposition")),(0,r.kt)("p",null,"Can easily reuse sections of code, and ease of change\nCan debug code easily, enforce constraints, and easier to validate changes."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modular nature, and encapsulation help to localise problems")),(0,r.kt)("p",null,"Things will be in memory and will be able to track itself. Objects have limits on what can change the data, only certain things can alter it"),(0,r.kt)("h2",{id:"what-is-an-ool"},"What is an OOL"),(0,r.kt)("p",null,"Language which promotes or allows object oriented programming and design:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Objects (and classes)"),(0,r.kt)("li",{parentName:"ul"},"Encapsulation (methods and data together)"),(0,r.kt)("li",{parentName:"ul"},"Data hiding (restricts access to data)"),(0,r.kt)("li",{parentName:"ul"},"Composition (stronger than aggregation)"),(0,r.kt)("li",{parentName:"ul"},"Inheritance (reuse)"),(0,r.kt)("li",{parentName:"ul"},"Abstraction (and interfaces)"),(0,r.kt)("li",{parentName:"ul"},"Polymorphism (dynamic dispatch)\nClasses are 'plans' for an objects")),(0,r.kt)("h3",{id:"better-support-for-oo-programming"},"Better support for OO programming"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enforcing OO behaviour"),(0,r.kt)("li",{parentName:"ul"},"Fewer lines of code to get )) behaviour"),(0,r.kt)("li",{parentName:"ul"},"Explicit syntax: more obvious what code is doing")),(0,r.kt)("h2",{id:"java"},"Java"),(0,r.kt)("p",null,"Compiled to an intermediate 'byte code' which is executed on target devices.\nResulting ",(0,r.kt)("inlineCode",{parentName:"p"},".class")," file can be run on any platform inside a 'virtual machine' (JVM)"),(0,r.kt)("h3",{id:"advantages"},"Advantages"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"'Run anywhere'"),(0,r.kt)("li",{parentName:"ul"},"Many libraries of reusable classes"),(0,r.kt)("li",{parentName:"ul"},"Focus on language and library design is ",(0,r.kt)("em",{parentName:"li"},"often")," on good OOP rather than speed"),(0,r.kt)("li",{parentName:"ul"},"Reuse of classes is important, speeds up development and speeds debugging")),(0,r.kt)("p",null,"Don't need to worry about pointers"),(0,r.kt)("h2",{id:"objects-and-classes"},"Objects and Classes"),(0,r.kt)("p",null,"C structs can be considered to be very simple objects\n",(0,r.kt)("strong",{parentName:"p"},"Class")," - Blueprint for creating an object\n",(0,r.kt)("strong",{parentName:"p"},"Object")," - Some collection of data that exists at runtime which can apply functions to\nCan have many different 'instances' of a class. Types of things are still ",(0,r.kt)("em",{parentName:"p"},"classes")," not ",(0,r.kt)("em",{parentName:"p"},"objects")," - they are still ",(0,r.kt)("em",{parentName:"p"},"designs")," rather than a specific style. With an object should be able to say ",(0,r.kt)("em",{parentName:"p"},"this one")),(0,r.kt)("p",null,"Classes specify what is ",(0,r.kt)("strong",{parentName:"p"},"in")," objects of that type\nObjects are ",(0,r.kt)("strong",{parentName:"p"},"instances")," of classes"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"public")," - anything can access it\n",(0,r.kt)("strong",{parentName:"p"},"private")," - only the class members can access it"),(0,r.kt)("p",null,"All executable code in Java must be in classes\nFunctions = methods"))}u.isMDXComponent=!0}}]);