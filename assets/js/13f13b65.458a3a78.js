"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[8674],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),c=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(a),m=n,k=d["".concat(o,".").concat(m)]||d[m]||p[m]||l;return a?r.createElement(k,i(i({ref:t},u),{},{components:a})):r.createElement(k,i({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<l;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},33470:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const l={},i="13. Broadcast, Multicast and Discovery",s={unversionedId:"Year2/2014/13",id:"Year2/2014/13",title:"13. Broadcast, Multicast and Discovery",description:"24/03/23",source:"@site/docs/Year2/2014/13.md",sourceDirName:"Year2/2014",slug:"/Year2/2014/13",permalink:"/Year2/2014/13",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year2",previous:{title:"12. Overlay Networks and Peer-to-Peer",permalink:"/Year2/2014/12"},next:{title:"14.  Distributed Algorithms",permalink:"/Year2/2014/14"}},o={},c=[{value:"IP Multcast and broadcast",id:"ip-multcast-and-broadcast",level:2},{value:"IP Broadcast",id:"ip-broadcast",level:3},{value:"IP Multicast",id:"ip-multicast",level:3},{value:"Multicast considerations",id:"multicast-considerations",level:3},{value:"Applications",id:"applications",level:3},{value:"Broadcast and Multicast Applications (including Discovery)",id:"broadcast-and-multicast-applications-including-discovery",level:2},{value:"DHCP",id:"dhcp",level:3},{value:"Network Discovery Service",id:"network-discovery-service",level:3}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"13-broadcast-multicast-and-discovery"},"13. Broadcast, Multicast and Discovery"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"}," 24/03/23")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://moodle.nottingham.ac.uk/pluginfile.php/9430732/mod_page/content/3/16%20Broadcast%2C%20Multicast%20and%20Discovery.pdf"},"MoodlePDF")),(0,n.kt)("h2",{id:"ip-multcast-and-broadcast"},"IP Multcast and broadcast"),(0,n.kt)("h3",{id:"ip-broadcast"},"IP Broadcast"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"IP Broadcast allows a single UDP datagram to be sent to all of the hosts on a physical network"),(0,n.kt)("li",{parentName:"ul"},"Datagram is addressed to an IP broadcast address",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Effectively represents ALL hosts on a network"))),(0,n.kt)("li",{parentName:"ul"},"Address 255.255.255.255 = broadcast address for ",(0,n.kt)("em",{parentName:"li"},"this")," network",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Highest IP address on a subnet is the broadcast address for that subnet"))),(0,n.kt)("li",{parentName:"ul"},"On the destination network, the IP broadcast address is mapped to a link layer broadcast address"),(0,n.kt)("li",{parentName:"ul"},"The physical network copies the broadcast frame to all hosts"),(0,n.kt)("li",{parentName:"ul"},"All physical network interfaces accept frames addressed to the broadcast MAC address"),(0,n.kt)("li",{parentName:"ul"},"Then the frame (IP datagram) is passed to the OS to handle")),(0,n.kt)("h3",{id:"ip-multicast"},"IP Multicast"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Multicast is a Class D IPv4 address"),(0,n.kt)("li",{parentName:"ul"},"These addresses represent groups of machines rather than individual hosts (or networks)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Any host can choose to join any number of groups"),(0,n.kt)("li",{parentName:"ul"},"OS then configures network cards to accept corresponding frames, and inform local routers/switches"))),(0,n.kt)("li",{parentName:"ul"},"Specific ranges of multicast addresses are assigned to specific purposes ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Local network control block (224.0.0.0 to 224.0.0.224) for multicast traffic within a given local network"))),(0,n.kt)("li",{parentName:"ul"},"IP Multicast allows a single UDP datagram to be sent efficiently to many (not all) hosts"),(0,n.kt)("li",{parentName:"ul"},"Datagram is addressed to an IP multicast address"),(0,n.kt)("li",{parentName:"ul"},"This is mapped to a link layer multicast address"),(0,n.kt)("li",{parentName:"ul"},"Physical network copies the frame to all relevant hosts"),(0,n.kt)("li",{parentName:"ul"},"The physical network interface accepts the multicast frame")),(0,n.kt)("h3",{id:"multicast-considerations"},"Multicast considerations"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Failure Model")," - Same as UDP, best effor",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Any subset of hosts may receive a given message"),(0,n.kt)("li",{parentName:"ul"},"Messages may be re-ordered across inter networks"))),(0,n.kt)("li",{parentName:"ul"},"Making multicast ",(0,n.kt)("strong",{parentName:"li"},"reliable")," is complicated"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Wide-area support")," - Multicast works well on Ethernet and WiFi but is often NOT forward by routers")),(0,n.kt)("h3",{id:"applications"},"Applications"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Performance/network efficiency - single physical copy can reach all machines on (local) network"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Fault tolerance")," - multiple servers can receive/handle a single multicast request"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Service discovery")," - multicast request when server IP is unknown"),(0,n.kt)("li",{parentName:"ul"},"Local ",(0,n.kt)("strong",{parentName:"li"},"Peer-to-Peer")," applications ")),(0,n.kt)("h2",{id:"broadcast-and-multicast-applications-including-discovery"},"Broadcast and Multicast Applications (including Discovery)"),(0,n.kt)("h3",{id:"dhcp"},"DHCP"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Every host on the internet needs to know its IP address, network, gateway, DNS server"),(0,n.kt)("li",{parentName:"ul"},"Often discovered when the machine connects to a local network by using DHCP"),(0,n.kt)("li",{parentName:"ul"},"New machines broadcasts a DHCP request to the local network"),(0,n.kt)("li",{parentName:"ul"},"Delivered to every machine on the network"),(0,n.kt)("li",{parentName:"ul"},"Any DHCP server on the local network handles the request and provides the information")),(0,n.kt)("h3",{id:"network-discovery-service"},"Network Discovery Service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Discovery services are directory services that typically operate over local networks where devices and processes are initially unknown to one anohter"),(0,n.kt)("li",{parentName:"ul"},"Various implementation approaches",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Often use network multicast initally"),(0,n.kt)("li",{parentName:"ul"},"Java JINI")))))}p.isMDXComponent=!0}}]);