"use strict";(self.webpackChunknottes=self.webpackChunknottes||[]).push([[9525],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),f=o,d=p["".concat(l,".").concat(f)]||p[f]||m[f]||a;return t?r.createElement(d,i(i({ref:n},c),{},{components:t})):r.createElement(d,i({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7906:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return m}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={},l="AI fundamental Issues",u={unversionedId:"Year1/AI/22.02.01 - AI Fundamental Issues",id:"Year1/AI/22.02.01 - AI Fundamental Issues",title:"AI fundamental Issues",description:"Travelling Salesman Problem",source:"@site/docs/Year1/1008-AI/22.02.01 - AI Fundamental Issues.md",sourceDirName:"Year1/1008-AI",slug:"/Year1/AI/22.02.01 - AI Fundamental Issues",permalink:"/Year1/AI/22.02.01 - AI Fundamental Issues",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"year1",previous:{title:"Revision",permalink:"/Year1/Databases/Revision"},next:{title:"Introduction",permalink:"/Year1/AI/22.02.01 - Introduction"}},c={},m=[{value:"Travelling Salesman Problem",id:"travelling-salesman-problem",level:2},{value:"Towers of Hanoi",id:"towers-of-hanoi",level:2},{value:"Combinatorial Explosion",id:"combinatorial-explosion",level:2},{value:"The Turing Test",id:"the-turing-test",level:2},{value:"Chinese Room Experiment",id:"chinese-room-experiment",level:2}],p={toc:m};function f(e){var n=e.components,s=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ai-fundamental-issues"},"AI fundamental Issues"),(0,a.kt)("h2",{id:"travelling-salesman-problem"},"Travelling Salesman Problem"),(0,a.kt)("p",null,"Has to visit a number of cities, start at any city and must end at the same city\nSolving: Find the minimum distance / cost solution\nCombinatorial Explosion Problem: One of the major unsolved theoretical problems in Computer Science"),(0,a.kt)("h2",{id:"towers-of-hanoi"},"Towers of Hanoi"),(0,a.kt)("p",null,"Group of Tibetan monks move 64 gold rinks which blacked on diamond pegs from one peg to another. Rule: bigger rings at the bottom. Would take years to compute"),(0,a.kt)("h2",{id:"combinatorial-explosion"},"Combinatorial Explosion"),(0,a.kt)("p",null,"The feature where the number of problem solutions grows exponentially with its size\nAn exhaustive search is not an option\n",(0,a.kt)("img",{alt:"5adce7d5099dccd7fa4bb9bf7de871af.png",src:t(1136).Z,width:"579",height:"374"})),(0,a.kt)("h2",{id:"the-turing-test"},"The Turing Test"),(0,a.kt)("p",null,"An interrogator is connected to a person and a machine via a terminal and cannot see either of them\nTask: to find out which candidate is the machine or human, only by asking them questions\nIf the machine can fool the interrogator 30% of the time, the machine is considered intelligent"),(0,a.kt)("h2",{id:"chinese-room-experiment"},"Chinese Room Experiment"),(0,a.kt)("p",null,'Simple rule processing system where the "rule processor" happens to be intelligent, but has no understanding of the rules\nJust comprises a rule book\nSystem acts as it understands Chinese! Behaving intelligently was not enoguh to prove a computer was intelligent'))}f.isMDXComponent=!0},1136:function(e,n,t){n.Z=t.p+"assets/images/5adce7d5099dccd7fa4bb9bf7de871af-1b04ea51e799c00f3b144947c323c1a1.png"}}]);